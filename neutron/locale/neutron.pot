# Translations template for neutron.
# Copyright (C) 2015 ORGANIZATION
# This file is distributed under the same license as the neutron project.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2015.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: neutron 7.0.0.dev347.g23e9734\n"
"Report-Msgid-Bugs-To: EMAIL@ADDRESS\n"
"POT-Creation-Date: 2015-09-24 20:52+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.0\n"

#: neutron/manager.py:77
#, python-format
msgid "dhcp_agents_per_network must be >= 1. '%s' is invalid."
msgstr ""

#: neutron/manager.py:89
msgid "Neutron core_plugin not configured!"
msgstr ""

#: neutron/manager.py:140 neutron/manager.py:152
msgid "Plugin not found."
msgstr ""

#: neutron/manager.py:200
#, python-format
msgid "Multiple plugins for service %s were configured"
msgstr ""

#: neutron/policy.py:201
#, python-format
msgid ""
"Unable to identify a target field from:%s. Match should be in the form "
"%%(<field_name>)s"
msgstr ""

#: neutron/policy.py:231
#, python-format
msgid "Unable to find resource name in %s"
msgstr ""

#: neutron/policy.py:240
#, python-format
msgid ""
"Unable to verify match:%(match)s as the parent resource: %(res)s was not "
"found"
msgstr ""

#: neutron/service.py:42
msgid "Seconds between running periodic tasks"
msgstr ""

#: neutron/service.py:44
msgid ""
"Number of separate API worker processes for service. If not specified, "
"the default is equal to the number of CPUs available for best "
"performance."
msgstr ""

#: neutron/service.py:49
msgid "Number of RPC worker processes for service"
msgstr ""

#: neutron/service.py:52
msgid ""
"Range of seconds to randomly delay when starting the periodic task "
"scheduler to reduce stampeding. (Disable by setting to 0)"
msgstr ""

#: neutron/wsgi.py:52
msgid "Number of backlog requests to configure the socket with"
msgstr ""

#: neutron/wsgi.py:56
msgid ""
"Sets the value of TCP_KEEPIDLE in seconds for each server socket. Not "
"supported on OS X."
msgstr ""

#: neutron/wsgi.py:60
msgid "Number of seconds to keep retrying to listen"
msgstr ""

#: neutron/wsgi.py:63
msgid "Max header line to accommodate large tokens"
msgstr ""

#: neutron/wsgi.py:66
msgid "Enable SSL on the API server"
msgstr ""

#: neutron/wsgi.py:68
msgid "CA certificate file to use to verify connecting clients"
msgstr ""

#: neutron/wsgi.py:71
msgid "Certificate file to use when starting the server securely"
msgstr ""

#: neutron/wsgi.py:74
msgid "Private key file to use when starting the server securely"
msgstr ""

#: neutron/wsgi.py:78
msgid ""
"Determines if connections are allowed to be held open by clients after a "
"request is fulfilled. A value of False will ensure that the socket "
"connection will be explicitly closed once a response has been sent to the"
" client."
msgstr ""

#: neutron/wsgi.py:84
msgid ""
"Timeout for client connections socket operations. If an incoming "
"connection is idle for this number of seconds it will be closed. A value "
"of '0' means wait forever."
msgstr ""

#: neutron/wsgi.py:188
#, python-format
msgid "Could not bind to %(host)s:%(port)s after trying for %(time)d seconds"
msgstr ""

#: neutron/wsgi.py:208
#, python-format
msgid "Unable to find ssl_cert_file : %s"
msgstr ""

#: neutron/wsgi.py:214
#, python-format
msgid "Unable to find ssl_key_file : %s"
msgstr ""

#: neutron/wsgi.py:219
#, python-format
msgid "Unable to find ssl_ca_file : %s"
msgstr ""

#: neutron/wsgi.py:510
msgid "Cannot understand JSON"
msgstr ""

#: neutron/wsgi.py:676
msgid "You must implement __call__"
msgstr ""

#: neutron/wsgi.py:764 neutron/api/v2/base.py:205 neutron/api/v2/base.py:364
#: neutron/api/v2/base.py:542 neutron/api/v2/base.py:606
#: neutron/extensions/l3agentscheduler.py:51
#: neutron/extensions/l3agentscheduler.py:94
#: neutron/pecan_wsgi/hooks/policy_enforcement.py:66
msgid "The resource could not be found."
msgstr ""

#: neutron/wsgi.py:813
msgid "Unsupported Content-Type"
msgstr ""

#: neutron/wsgi.py:817
msgid "Malformed request body"
msgstr ""

#: neutron/wsgi.py:954
#, python-format
msgid "The requested content type %s is invalid."
msgstr ""

#: neutron/wsgi.py:1007
msgid "Could not deserialize data"
msgstr ""

#: neutron/agent/securitygroups_rpc.py:34
msgid "Driver for security groups firewall in the L2 agent"
msgstr ""

#: neutron/agent/securitygroups_rpc.py:38
msgid ""
"Controls whether the neutron security group API is enabled in the server."
" It should be false when using no security groups or using the nova "
"security group API."
msgstr ""

#: neutron/agent/securitygroups_rpc.py:45
msgid "Use ipset to speed-up the iptables based security groups."
msgstr ""

#: neutron/agent/common/config.py:29
msgid "Root helper application."
msgstr ""

#: neutron/agent/common/config.py:32
msgid "Use the root helper to read the namespaces from the operating system."
msgstr ""

#: neutron/agent/common/config.py:39
msgid "Root helper daemon application to use when possible."
msgstr ""

#: neutron/agent/common/config.py:44
msgid ""
"Seconds between nodes reporting state to server; should be less than "
"agent_down_time, best if it is half or less than agent_down_time."
msgstr ""

#: neutron/agent/common/config.py:48
msgid "Log agent heartbeats"
msgstr ""

#: neutron/agent/common/config.py:53
msgid "The driver used to manage the virtual interface."
msgstr ""

#: neutron/agent/common/config.py:58
msgid ""
"Allow overlapping IP. This option is deprecated and will be removed in a "
"future release."
msgstr ""

#: neutron/agent/common/config.py:65
msgid "Add comments to iptables rules."
msgstr ""

#: neutron/agent/common/config.py:71
msgid "Action to be executed when a child process dies"
msgstr ""

#: neutron/agent/common/config.py:73
msgid ""
"Interval between checks of child process liveness (seconds), use 0 to "
"disable"
msgstr ""

#: neutron/agent/common/config.py:139
msgid "Top-level directory for maintaining dhcp state"
msgstr ""

#: neutron/agent/common/ovs_lib.py:50
msgid "Timeout in seconds for ovs-vsctl commands"
msgstr ""

#: neutron/agent/common/ovs_lib.py:494
#, python-format
msgid "Unable to determine mac address for %s"
msgstr ""

#: neutron/agent/common/ovs_lib.py:632
msgid "Cannot match priority on flow deletion or modification"
msgstr ""

#: neutron/agent/common/ovs_lib.py:637
msgid "Must specify one or more actions on flow addition or modification"
msgstr ""

#: neutron/agent/dhcp/agent.py:588
#, python-format
msgid "Agent updated: %(payload)s"
msgstr ""

#: neutron/agent/dhcp/config.py:21
msgid "Interval to resync."
msgstr ""

#: neutron/agent/dhcp/config.py:24
msgid "The driver used to manage the DHCP server."
msgstr ""

#: neutron/agent/dhcp/config.py:26
msgid "Support Metadata requests on isolated networks."
msgstr ""

#: neutron/agent/dhcp/config.py:28
msgid "Force to use DHCP to get Metadata on all networks."
msgstr ""

#: neutron/agent/dhcp/config.py:30
msgid ""
"Allows for serving metadata requests from a dedicated network. Requires "
"enable_isolated_metadata = True"
msgstr ""

#: neutron/agent/dhcp/config.py:34
msgid "Number of threads to use during sync process."
msgstr ""

#: neutron/agent/dhcp/config.py:40
msgid "Location to store DHCP server config files"
msgstr ""

#: neutron/agent/dhcp/config.py:43
msgid ""
"Domain to use for building the hostnames.This option is deprecated. It "
"has been moved to neutron.conf as dns_domain. It will removed from here "
"in a future release"
msgstr ""

#: neutron/agent/dhcp/config.py:53
msgid "Override the default dnsmasq settings with this file"
msgstr ""

#: neutron/agent/dhcp/config.py:55
msgid "Comma-separated list of the DNS servers which will be used as forwarders."
msgstr ""

#: neutron/agent/dhcp/config.py:59
msgid ""
"Delete namespace after removing a dhcp server.This option is deprecated "
"and will be removed in a future release."
msgstr ""

#: neutron/agent/dhcp/config.py:64
msgid ""
"Base log dir for dnsmasq logging. The log contains DHCP and DNS log "
"information and is useful for debugging issues with either DHCP or DNS. "
"If this section is null, disable dnsmasq log."
msgstr ""

#: neutron/agent/dhcp/config.py:71
msgid "Limit number of leases to prevent a denial-of-service."
msgstr ""

#: neutron/agent/dhcp/config.py:73
msgid "Use broadcast in DHCP replies"
msgstr ""

#: neutron/agent/l2/extensions/manager.py:29
msgid "Extensions list to use"
msgstr ""

#: neutron/agent/l3/agent.py:293
msgid ""
"The 'gateway_external_network_id' option must be configured for this "
"agent as Neutron has more than one external network."
msgstr ""

#: neutron/agent/l3/config.py:27
msgid ""
"The working mode for the agent. Allowed modes are: 'legacy' - this "
"preserves the existing behavior where the L3 agent is deployed on a "
"centralized networking node to provide L3 services like DNAT, and SNAT. "
"Use this mode if you do not want to adopt DVR. 'dvr' - this mode enables "
"DVR functionality and must be used for an L3 agent that runs on a compute"
" host. 'dvr_snat' - this enables centralized SNAT support in conjunction "
"with DVR.  This mode must be used for an L3 agent running on a "
"centralized node (or in single-host deployments, e.g. devstack)"
msgstr ""

#: neutron/agent/l3/config.py:41 neutron/debug/debug_agent.py:42
msgid "Name of bridge used for external network traffic."
msgstr ""

#: neutron/agent/l3/config.py:45
msgid "TCP Port used by Neutron metadata namespace proxy."
msgstr ""

#: neutron/agent/l3/config.py:49
msgid ""
"Send this many gratuitous ARPs for HA setup, if less than or equal to 0, "
"the feature is disabled"
msgstr ""

#: neutron/agent/l3/config.py:52
msgid ""
"If namespaces is disabled, the l3 agent can only configure a router that "
"has the matching router ID."
msgstr ""

#: neutron/agent/l3/config.py:57
msgid "Agent should implement routers with no gateway"
msgstr ""

#: neutron/agent/l3/config.py:59
msgid "UUID of external network for routers implemented by the agents."
msgstr ""

#: neutron/agent/l3/config.py:62
msgid ""
"With IPv6, the network used for the external gateway does not need to "
"have an associated subnet, since the automatically assigned link-local "
"address (LLA) can be used. However, an IPv6 gateway address is needed for"
" use as the next-hop for the default route. If no IPv6 gateway address is"
" configured here, (and only then) the neutron router will be configured "
"to get its default route from router advertisements (RAs) from the "
"upstream router; in which case the upstream router must also be "
"configured to send these RAs. The ipv6_gateway, when configured, should "
"be the LLA of the interface on the upstream router. If a next-hop using a"
" global unique address (GUA) is desired, it needs to be done via a subnet"
" allocated to the network and not through this parameter. "
msgstr ""

#: neutron/agent/l3/config.py:80
msgid ""
"Driver used for ipv6 prefix delegation. This needs to be an entry point "
"defined in the neutron.agent.linux.pd_drivers namespace. See setup.cfg "
"for entry points included with the neutron source."
msgstr ""

#: neutron/agent/l3/config.py:86
msgid "Allow running metadata proxy."
msgstr ""

#: neutron/agent/l3/config.py:88
msgid ""
"Delete namespace after removing a router.This option is deprecated and "
"will be removed in a future release."
msgstr ""

#: neutron/agent/l3/config.py:94
msgid ""
"Iptables mangle mark used to mark metadata valid requests. This mark will"
" be masked with 0xffff so that only the lower 16 bits will be used."
msgstr ""

#: neutron/agent/l3/config.py:99
msgid ""
"Iptables mangle mark used to mark ingress from external network. This "
"mark will be masked with 0xffff so that only the lower 16 bits will be "
"used."
msgstr ""

#: neutron/agent/l3/ha.py:36
msgid "Location to store keepalived/conntrackd config files"
msgstr ""

#: neutron/agent/l3/ha.py:41
msgid "VRRP authentication type"
msgstr ""

#: neutron/agent/l3/ha.py:43
msgid "VRRP authentication password"
msgstr ""

#: neutron/agent/l3/ha.py:47
msgid "The advertisement interval in seconds"
msgstr ""

#: neutron/agent/l3/keepalived_state_change.py:95
#, python-format
msgid "Unexpected response: %s"
msgstr ""

#: neutron/agent/l3/keepalived_state_change.py:102
msgid "ID of the router"
msgstr ""

#: neutron/agent/l3/keepalived_state_change.py:104
msgid "Namespace of the router"
msgstr ""

#: neutron/agent/l3/keepalived_state_change.py:106
msgid "Path to the router directory"
msgstr ""

#: neutron/agent/l3/keepalived_state_change.py:108
msgid "Interface to monitor"
msgstr ""

#: neutron/agent/l3/keepalived_state_change.py:110
msgid "CIDR to monitor"
msgstr ""

#: neutron/agent/l3/keepalived_state_change.py:112
msgid "Path to PID file for this process"
msgstr ""

#: neutron/agent/l3/keepalived_state_change.py:114
msgid "User (uid or name) running this process after its initialization"
msgstr ""

#: neutron/agent/l3/keepalived_state_change.py:117
msgid "Group (gid or name) running this process after its initialization"
msgstr ""

#: neutron/agent/l3/keepalived_state_change.py:122
#: neutron/agent/metadata/namespace_proxy.py:156
#: neutron/tests/functional/agent/l3/test_keepalived_state_change.py:31
msgid "Location of Metadata Proxy UNIX domain socket"
msgstr ""

#: neutron/agent/linux/async_process.py:76
msgid "respawn_interval must be >= 0 if provided."
msgstr ""

#: neutron/agent/linux/async_process.py:108
msgid "Process is already started"
msgstr ""

#: neutron/agent/linux/async_process.py:129
msgid "Process is not running."
msgstr ""

#: neutron/agent/linux/daemon.py:54
#, python-format
msgid "Failed to set uid %s"
msgstr ""

#: neutron/agent/linux/daemon.py:68
#, python-format
msgid "Failed to set gid %s"
msgstr ""

#: neutron/agent/linux/daemon.py:98
msgid "Root permissions are required to drop privileges."
msgstr ""

#: neutron/agent/linux/daemon.py:106
msgid "Failed to remove supplemental groups"
msgstr ""

#: neutron/agent/linux/dhcp.py:242
#, python-format
msgid "Error while reading %s"
msgstr ""

#: neutron/agent/linux/dhcp.py:249
#, python-format
msgid "Unable to convert value in %s"
msgstr ""

#: neutron/agent/linux/dhcp.py:251
#, python-format
msgid "Unable to access %s"
msgstr ""

#: neutron/agent/linux/external_process.py:38
msgid "Location to store child pid files"
msgstr ""

#: neutron/agent/linux/interface.py:37
msgid "Name of Open vSwitch bridge to use"
msgstr ""

#: neutron/agent/linux/interface.py:40
msgid "Uses veth for an interface or not"
msgstr ""

#: neutron/agent/linux/interface.py:42
msgid "MTU setting for device."
msgstr ""

#: neutron/agent/linux/ip_lib.py:35
msgid "Force ip_lib calls to use the root helper"
msgstr ""

#: neutron/agent/linux/ip_lib.py:47
#, python-format
msgid "Failure waiting for address %(address)s to become ready: %(reason)s"
msgstr ""

#: neutron/agent/linux/ip_link_support.py:33
#, python-format
msgid "ip link command is not supported: %(reason)s"
msgstr ""

#: neutron/agent/linux/ip_link_support.py:37
#, python-format
msgid "ip link capability %(capability)s is not supported"
msgstr ""

#: neutron/agent/linux/iptables_manager.py:212
#, python-format
msgid "Unknown chain: %r"
msgstr ""

#: neutron/agent/linux/keepalived.py:54
#, python-format
msgid ""
"Network of size %(size)s, from IP range %(parent_range)s excluding IP "
"ranges %(excluded_ranges)s was not found."
msgstr ""

#: neutron/agent/linux/keepalived.py:63
#, python-format
msgid "Invalid instance state: %(state)s, valid states are: %(valid_states)s"
msgstr ""

#: neutron/agent/linux/keepalived.py:73
#, python-format
msgid ""
"Invalid authentication type: %(auth_type)s, valid types are: "
"%(valid_auth_types)s"
msgstr ""

#: neutron/agent/linux/keepalived.py:83
#, python-format
msgid ""
"Attempted to add duplicate VIP address, existing vips are: "
"%(existing_vips)s, duplicate vip is: %(duplicate_vip)s"
msgstr ""

#: neutron/agent/linux/pd.py:39
msgid "Service to handle DHCPv6 Prefix delegation."
msgstr ""

#: neutron/agent/linux/pd_driver.py:24
msgid "Location to store IPv6 PD files."
msgstr ""

#: neutron/agent/linux/pd_driver.py:27
msgid ""
"A decimal value as Vendor's Registered Private Enterprise Number as "
"required by RFC3315 DUID-EN."
msgstr ""

#: neutron/agent/linux/ra.py:35
msgid "Location to store IPv6 RA config files"
msgstr ""

#: neutron/agent/linux/utils.py:141
#, python-format
msgid ""
"\n"
"Command: %(cmd)s\n"
"Exit code: %(code)d\n"
msgstr ""

#: neutron/agent/linux/utils.py:152
#, python-format
msgid ""
"Stdin: %(stdin)s\n"
"Stdout: %(stdout)s\n"
"Stderr: %(stderr)s"
msgstr ""

#: neutron/agent/metadata/agent.py:122
#: neutron/agent/metadata/namespace_proxy.py:58
msgid "An unknown error has occurred. Please try your request again."
msgstr ""

#: neutron/agent/metadata/agent.py:200
msgid ""
"Either one of parameter network_id or router_id must be passed to "
"_get_ports method."
msgstr ""

#: neutron/agent/metadata/agent.py:262
#: neutron/agent/metadata/namespace_proxy.py:104
msgid "Remote metadata server experienced an internal server error."
msgstr ""

#: neutron/agent/metadata/agent.py:269
#: neutron/agent/metadata/namespace_proxy.py:111
#, python-format
msgid "Unexpected response code: %s"
msgstr ""

#: neutron/agent/metadata/config.py:23
msgid "Location for Metadata Proxy UNIX domain socket."
msgstr ""

#: neutron/agent/metadata/config.py:26
msgid ""
"User (uid or name) running metadata proxy after its initialization (if "
"empty: agent effective user)."
msgstr ""

#: neutron/agent/metadata/config.py:31
msgid ""
"Group (gid or name) running metadata proxy after its initialization (if "
"empty: agent effective group)."
msgstr ""

#: neutron/agent/metadata/config.py:40
msgid ""
"Enable/Disable log watch by metadata proxy. It should be disabled when "
"metadata_proxy_user/group is not allowed to read/write its log file and "
"copytruncate logrotate option must be used if logrotate is enabled on "
"metadata proxy log files. Option default value is deduced from "
"metadata_proxy_user: watch log is enabled if metadata_proxy_user is agent"
" effective user id/name."
msgstr ""

#: neutron/agent/metadata/config.py:54
msgid "Admin user"
msgstr ""

#: neutron/agent/metadata/config.py:56
msgid "Admin password"
msgstr ""

#: neutron/agent/metadata/config.py:59
msgid "Admin tenant name"
msgstr ""

#: neutron/agent/metadata/config.py:61
msgid "Authentication URL"
msgstr ""

#: neutron/agent/metadata/config.py:63 neutron/common/config.py:50
msgid "The type of authentication to use"
msgstr ""

#: neutron/agent/metadata/config.py:65
msgid "Authentication region"
msgstr ""

#: neutron/agent/metadata/config.py:68
msgid "Turn off verification of the certificate for ssl"
msgstr ""

#: neutron/agent/metadata/config.py:71
msgid "Certificate Authority public key (CA cert) file for ssl"
msgstr ""

#: neutron/agent/metadata/config.py:75
msgid "Network service endpoint type to pull from the keystone catalog"
msgstr ""

#: neutron/agent/metadata/config.py:79
msgid ""
"Neutron endpoint URL, if not set will use endpoint from the keystone "
"catalog along with endpoint_type"
msgstr ""

#: neutron/agent/metadata/config.py:82
msgid "IP address used by Nova metadata server."
msgstr ""

#: neutron/agent/metadata/config.py:85
msgid "TCP Port used by Nova metadata server."
msgstr ""

#: neutron/agent/metadata/config.py:88
msgid "Shared secret to sign instance-id request"
msgstr ""

#: neutron/agent/metadata/config.py:93
msgid "Protocol to access nova metadata, http or https"
msgstr ""

#: neutron/agent/metadata/config.py:95
msgid "Allow to perform insecure SSL (https) requests to nova metadata"
msgstr ""

#: neutron/agent/metadata/config.py:99
msgid "Client certificate for nova metadata api server."
msgstr ""

#: neutron/agent/metadata/config.py:102
msgid "Private key of client certificate."
msgstr ""

#: neutron/agent/metadata/config.py:116
msgid ""
"Metadata Proxy UNIX domain socket mode, 4 values allowed: 'deduce': "
"deduce mode from metadata_proxy_user/group values, 'user': set metadata "
"proxy socket mode to 0o644, to use when metadata_proxy_user is agent "
"effective user or root, 'group': set metadata proxy socket mode to 0o664,"
" to use when metadata_proxy_group is agent effective group or root, "
"'all': set metadata proxy socket mode to 0o666, to use otherwise."
msgstr ""

#: neutron/agent/metadata/config.py:130
msgid ""
"Number of separate worker processes for metadata server (defaults to half"
" of the number of CPUs)"
msgstr ""

#: neutron/agent/metadata/config.py:134
msgid "Number of backlog requests to configure the metadata server socket with"
msgstr ""

#: neutron/agent/metadata/namespace_proxy.py:140
msgid "Network that will have instance metadata proxied."
msgstr ""

#: neutron/agent/metadata/namespace_proxy.py:143
msgid "Router that will have connected instances' metadata proxied."
msgstr ""

#: neutron/agent/metadata/namespace_proxy.py:146
#: neutron/tests/functional/agent/linux/simple_daemon.py:42
msgid "Location of pid file of this process."
msgstr ""

#: neutron/agent/metadata/namespace_proxy.py:149
msgid "Run as daemon."
msgstr ""

#: neutron/agent/metadata/namespace_proxy.py:152
msgid "TCP Port to listen for metadata server requests."
msgstr ""

#: neutron/agent/metadata/namespace_proxy.py:160
msgid "User (uid or name) running metadata proxy after its initialization"
msgstr ""

#: neutron/agent/metadata/namespace_proxy.py:164
msgid "Group (gid or name) running metadata proxy after its initialization"
msgstr ""

#: neutron/agent/metadata/namespace_proxy.py:168
msgid ""
"Watch file log. Log watch should be disabled when "
"metadata_proxy_user/group has no read/write permissions on metadata proxy"
" log file."
msgstr ""

#: neutron/agent/ovsdb/api.py:32
msgid "The interface for interacting with the OVSDB"
msgstr ""

#: neutron/agent/ovsdb/impl_idl.py:34
msgid "The connection string for the native OVSDB backend"
msgstr ""

#: neutron/agent/ovsdb/native/idlutils.py:48
#, python-format
msgid "Cannot find %(table)s with %(col)s=%(match)s"
msgstr ""

#: neutron/agent/ovsdb/native/idlutils.py:78
#, python-format
msgid "Table %s can only be queried by UUID"
msgstr ""

#: neutron/agent/ovsdb/native/idlutils.py:80
msgid "'.' searches are not implemented"
msgstr ""

#: neutron/agent/ovsdb/native/idlutils.py:85
msgid "record"
msgstr ""

#: neutron/agent/windows/utils.py:72
#, python-format
msgid ""
"\n"
"Command: %(cmd)s\n"
"Exit code: %(code)s\n"
"Stdin: %(stdin)s\n"
"Stdout: %(stdout)s\n"
"Stderr: %(stderr)s"
msgstr ""

#: neutron/api/api_common.py:118
#, python-format
msgid "Limit must be an integer 0 or greater and not '%d'"
msgstr ""

#: neutron/api/api_common.py:135
msgid "The number of sort_keys and sort_dirs must be same"
msgstr ""

#: neutron/api/api_common.py:140
#, python-format
msgid "%s is invalid attribute for sort_keys"
msgstr ""

#: neutron/api/api_common.py:144
#, python-format
msgid ""
"%(invalid_dirs)s is invalid value for sort_dirs, valid value is '%(asc)s'"
" and '%(desc)s'"
msgstr ""

#: neutron/api/api_common.py:328 neutron/api/v2/base.py:665
#, python-format
msgid "Unable to find '%s' in request body"
msgstr ""

#: neutron/api/api_common.py:335
#, python-format
msgid "Failed to parse request. Parameter '%s' not specified"
msgstr ""

#: neutron/api/extensions.py:231 neutron/pecan_wsgi/controllers/root.py:135
#, python-format
msgid "Extension with alias %s does not exist"
msgstr ""

#: neutron/api/extensions.py:235 neutron/api/extensions.py:239
msgid "Resource not found."
msgstr ""

#: neutron/api/versions.py:45
msgid "Unknown API version specified"
msgstr ""

#: neutron/api/rpc/callbacks/exceptions.py:17
#, python-format
msgid "Callback for %(resource_type)s returned wrong resource type"
msgstr ""

#: neutron/api/rpc/callbacks/exceptions.py:21
#, python-format
msgid "Callback for %(resource_type)s not found"
msgstr ""

#: neutron/api/rpc/callbacks/exceptions.py:25
#, python-format
msgid "Cannot add multiple callbacks for %(resource_type)s"
msgstr ""

#: neutron/api/rpc/handlers/dhcp_rpc.py:86
msgid "Unrecognized action"
msgstr ""

#: neutron/api/rpc/handlers/resources_rpc.py:38
#, python-format
msgid "Invalid resource type %(resource_type)s"
msgstr ""

#: neutron/api/rpc/handlers/resources_rpc.py:42
#, python-format
msgid "Resource %(resource_id)s of type %(resource_type)s not found"
msgstr ""

#: neutron/api/v2/attributes.py:56
#, python-format
msgid ""
"Invalid input. '%(target_dict)s' must be a dictionary with keys: "
"%(expected_keys)s"
msgstr ""

#: neutron/api/v2/attributes.py:68
#, python-format
msgid ""
"Validation of dictionary's keys failed. Expected keys: %(expected_keys)s "
"Provided keys: %(provided_keys)s"
msgstr ""

#: neutron/api/v2/attributes.py:83
#, python-format
msgid "'%(data)s' is not in %(valid_values)s"
msgstr ""

#: neutron/api/v2/attributes.py:99
#, python-format
msgid "'%s' Blank strings are not permitted"
msgstr ""

#: neutron/api/v2/attributes.py:111
#, python-format
msgid "'%s' is not a valid string"
msgstr ""

#: neutron/api/v2/attributes.py:116
#, python-format
msgid "'%(data)s' exceeds maximum length of %(max_len)s"
msgstr ""

#: neutron/api/v2/attributes.py:126
#, python-format
msgid "'%s' is not a valid boolean value"
msgstr ""

#: neutron/api/v2/attributes.py:145 neutron/api/v2/attributes.py:485
#, python-format
msgid "'%s' is not an integer"
msgstr ""

#: neutron/api/v2/attributes.py:149
#, python-format
msgid "'%(data)s' is too small - must be at least '%(limit)d'"
msgstr ""

#: neutron/api/v2/attributes.py:154
#, python-format
msgid "'%(data)s' is too large - must be no larger than '%(limit)d'"
msgstr ""

#: neutron/api/v2/attributes.py:163
#, python-format
msgid "'%s' contains whitespace"
msgstr ""

#: neutron/api/v2/attributes.py:182
#, python-format
msgid "'%s' is not a valid MAC address"
msgstr ""

#: neutron/api/v2/attributes.py:211
#, python-format
msgid "'%s' is not a valid IP address"
msgstr ""

#: neutron/api/v2/attributes.py:222
#, python-format
msgid "Invalid data format for IP pool: '%s'"
msgstr ""

#: neutron/api/v2/attributes.py:239 neutron/api/v2/attributes.py:246
#, python-format
msgid "Invalid data format for fixed IP: '%s'"
msgstr ""

#: neutron/api/v2/attributes.py:254
#, python-format
msgid "Duplicate IP address '%s'"
msgstr ""

#: neutron/api/v2/attributes.py:269
#, python-format
msgid "Invalid data format for nameserver: '%s'"
msgstr ""

#: neutron/api/v2/attributes.py:278
#, python-format
msgid "'%(host)s' is not a valid nameserver. %(msg)s"
msgstr ""

#: neutron/api/v2/attributes.py:283
#, python-format
msgid "Duplicate nameserver '%s'"
msgstr ""

#: neutron/api/v2/attributes.py:291
#, python-format
msgid "Invalid data format for hostroute: '%s'"
msgstr ""

#: neutron/api/v2/attributes.py:308
#, python-format
msgid "Duplicate hostroute '%s'"
msgstr ""

#: neutron/api/v2/attributes.py:324
#: neutron/tests/unit/api/v2/test_attributes.py:507
#: neutron/tests/unit/api/v2/test_attributes.py:521
#: neutron/tests/unit/api/v2/test_attributes.py:529
#, python-format
msgid "'%(data)s' isn't a recognized IP subnet cidr, '%(cidr)s' is recommended"
msgstr ""

#: neutron/api/v2/attributes.py:330
#, python-format
msgid "'%s' is not a valid IP subnet"
msgstr ""

#: neutron/api/v2/attributes.py:338 neutron/api/v2/attributes.py:399
#, python-format
msgid "'%s' is not a list"
msgstr ""

#: neutron/api/v2/attributes.py:343 neutron/api/v2/attributes.py:409
#, python-format
msgid "Duplicate items in the list: '%s'"
msgstr ""

#: neutron/api/v2/attributes.py:365
#, python-format
msgid "'%s' is not a valid input"
msgstr ""

#: neutron/api/v2/attributes.py:387
#, python-format
msgid "'%s' is not a valid UUID"
msgstr ""

#: neutron/api/v2/attributes.py:429
#, python-format
msgid "Validator '%s' does not exist."
msgstr ""

#: neutron/api/v2/attributes.py:441
#, python-format
msgid "'%s' is not a dictionary"
msgstr ""

#: neutron/api/v2/attributes.py:490
#, python-format
msgid "'%s' should be non-negative"
msgstr ""

#: neutron/api/v2/attributes.py:509
#, python-format
msgid "'%s' cannot be converted to boolean"
msgstr ""

#: neutron/api/v2/attributes.py:522
#, python-format
msgid "'%s' is not a integer"
msgstr ""

#: neutron/api/v2/attributes.py:545
#, python-format
msgid "'%s' must be a non negative decimal."
msgstr ""

#: neutron/api/v2/attributes.py:559
#, python-format
msgid "'%s' is not of the form <key>=[value]"
msgstr ""

#: neutron/api/v2/attributes.py:901
#, python-format
msgid "Failed to parse request. Required attribute '%s' not specified"
msgstr ""

#: neutron/api/v2/attributes.py:908
#, python-format
msgid "Attribute '%s' not allowed in POST"
msgstr ""

#: neutron/api/v2/attributes.py:927
#, python-format
msgid "Invalid input for %(attr)s. Reason: %(reason)s."
msgstr ""

#: neutron/api/v2/attributes.py:936
msgid ""
"Specifying 'tenant_id' other than authenticated tenant in request "
"requires admin privileges"
msgstr ""

#: neutron/api/v2/attributes.py:944
msgid "Running without keystone AuthN requires that tenant_id is specified"
msgstr ""

#: neutron/api/v2/attributes.py:952
#: neutron/extensions/allowedaddresspairs.py:80
#: neutron/extensions/multiprovidernet.py:45
#, python-format
msgid "Unrecognized attribute(s) '%s'"
msgstr ""

#: neutron/api/v2/base.py:94
msgid "Native pagination depend on native sorting"
msgstr ""

#: neutron/api/v2/base.py:567
#, python-format
msgid "Invalid format: %s"
msgstr ""

#: neutron/api/v2/base.py:643
msgid "Resource body required"
msgstr ""

#: neutron/api/v2/base.py:649
msgid "Bulk operation not supported"
msgstr ""

#: neutron/api/v2/base.py:652
msgid "Resources required"
msgstr ""

#: neutron/api/v2/base.py:662
msgid "Body contains invalid data"
msgstr ""

#: neutron/api/v2/base.py:677
#, python-format
msgid "Cannot update read-only attribute %s"
msgstr ""

#: neutron/api/v2/base.py:699
#: neutron/pecan_wsgi/hooks/ownership_validation.py:51
#, python-format
msgid "Tenant %(tenant_id)s not allowed to create %(resource)s on this network"
msgstr ""

#: neutron/api/v2/resource.py:131
#: neutron/tests/unit/api/v2/test_resource.py:248
msgid "Request Failed: internal server error while processing your request."
msgstr ""

#: neutron/callbacks/exceptions.py:17
#, python-format
msgid "The value '%(value)s' for %(element)s is not valid."
msgstr ""

#: neutron/cmd/ipset_cleanup.py:38
msgid "Destroy all IPsets."
msgstr ""

#: neutron/cmd/ipset_cleanup.py:41
msgid "Destroy IPsets even if there is an iptables reference."
msgstr ""

#: neutron/cmd/ipset_cleanup.py:45
msgid "String prefix used to match IPset names."
msgstr ""

#: neutron/cmd/netns_cleanup.py:66
msgid "Delete the namespace by removing all devices."
msgstr ""

#: neutron/cmd/ovs_cleanup.py:40
msgid ""
"True to delete all ports on all the OpenvSwitch bridges. False to delete "
"ports created by Neutron on integration and external network bridges."
msgstr ""

#: neutron/cmd/sanity_check.py:206
msgid "Check for OVS vxlan support"
msgstr ""

#: neutron/cmd/sanity_check.py:208
msgid "Check for OVS Geneve support"
msgstr ""

#: neutron/cmd/sanity_check.py:210
msgid "Check for iproute2 vxlan support"
msgstr ""

#: neutron/cmd/sanity_check.py:212
msgid "Check for patch port support"
msgstr ""

#: neutron/cmd/sanity_check.py:214
msgid "Check for nova notification support"
msgstr ""

#: neutron/cmd/sanity_check.py:216
msgid "Check for ARP responder support"
msgstr ""

#: neutron/cmd/sanity_check.py:218
msgid "Check for ARP header match support"
msgstr ""

#: neutron/cmd/sanity_check.py:220
msgid "Check for ICMPv6 header match support"
msgstr ""

#: neutron/cmd/sanity_check.py:222
msgid "Check for VF management support"
msgstr ""

#: neutron/cmd/sanity_check.py:224
msgid "Check netns permission settings"
msgstr ""

#: neutron/cmd/sanity_check.py:226
msgid "Check minimal dnsmasq version"
msgstr ""

#: neutron/cmd/sanity_check.py:228
msgid "Check ovsdb native interface support"
msgstr ""

#: neutron/cmd/sanity_check.py:230
msgid "Check ebtables installation"
msgstr ""

#: neutron/cmd/sanity_check.py:232
msgid "Check keepalived IPv6 support"
msgstr ""

#: neutron/cmd/sanity_check.py:234
msgid "Check minimal dibbler version"
msgstr ""

#: neutron/common/config.py:42
msgid "The host IP to bind to"
msgstr ""

#: neutron/common/config.py:44
msgid "The port to bind to"
msgstr ""

#: neutron/common/config.py:46
msgid "The API paste config file to use"
msgstr ""

#: neutron/common/config.py:48
msgid "The path for API extensions"
msgstr ""

#: neutron/common/config.py:52
msgid "The core plugin Neutron will use"
msgstr ""

#: neutron/common/config.py:54
msgid "The service plugins Neutron will use"
msgstr ""

#: neutron/common/config.py:56
msgid "The base MAC address Neutron will use for VIFs"
msgstr ""

#: neutron/common/config.py:58
msgid "How many times Neutron will retry MAC generation"
msgstr ""

#: neutron/common/config.py:60
msgid "Allow the usage of the bulk API"
msgstr ""

#: neutron/common/config.py:62
msgid "Allow the usage of the pagination"
msgstr ""

#: neutron/common/config.py:64
msgid "Allow the usage of the sorting"
msgstr ""

#: neutron/common/config.py:66
msgid ""
"The maximum number of items returned in a single response, value was "
"'infinite' or negative integer means no limit"
msgstr ""

#: neutron/common/config.py:70
msgid "Maximum number of DNS nameservers"
msgstr ""

#: neutron/common/config.py:72
msgid "Maximum number of host routes per subnet"
msgstr ""

#: neutron/common/config.py:74
msgid "Maximum number of fixed ips per port"
msgstr ""

#: neutron/common/config.py:76
msgid "Default IPv4 subnet-pool to be used for automatic subnet CIDR allocation"
msgstr ""

#: neutron/common/config.py:79
msgid "Default IPv6 subnet-pool to be used for automatic subnet CIDR allocation"
msgstr ""

#: neutron/common/config.py:83
msgid ""
"DHCP lease duration (in seconds). Use -1 to tell dnsmasq to use infinite "
"lease times."
msgstr ""

#: neutron/common/config.py:87
msgid "Domain to use for building the hostnames"
msgstr ""

#: neutron/common/config.py:89
msgid "Allow sending resource operation notification to DHCP agent"
msgstr ""

#: neutron/common/config.py:92
msgid "Allow overlapping IP support in Neutron"
msgstr ""

#: neutron/common/config.py:94
msgid ""
"Hostname to be used by the neutron server, agents and services running on"
" this machine. All the agents and services running on this machine must "
"use the same host value."
msgstr ""

#: neutron/common/config.py:99
msgid ""
"Ensure that configured gateway is on subnet. For IPv6, validate only if "
"gateway is not a link local address. Deprecated, to be removed during the"
" K release, at which point the check will be mandatory."
msgstr ""

#: neutron/common/config.py:105
msgid "Send notification to nova when port status changes"
msgstr ""

#: neutron/common/config.py:107
msgid ""
"Send notification to nova when port data (fixed_ips/floatingip) changes "
"so nova can update its cache."
msgstr ""

#: neutron/common/config.py:111
msgid ""
"URL for connection to nova. Deprecated in favour of an auth plugin in "
"[nova]."
msgstr ""

#: neutron/common/config.py:114
msgid ""
"Username for connecting to nova in admin context. Deprecated in favour of"
" an auth plugin in [nova]."
msgstr ""

#: neutron/common/config.py:117
msgid ""
"Password for connection to nova in admin context. Deprecated in favour of"
" an auth plugin in [nova]."
msgstr ""

#: neutron/common/config.py:121
msgid ""
"The uuid of the admin nova tenant. Deprecated in favour of an auth plugin"
" in [nova]."
msgstr ""

#: neutron/common/config.py:124
msgid ""
"The name of the admin nova tenant. Deprecated in favour of an auth plugin"
" in [nova]."
msgstr ""

#: neutron/common/config.py:128
msgid ""
"Authorization URL for connecting to nova in admin context. Deprecated in "
"favour of an auth plugin in [nova]."
msgstr ""

#: neutron/common/config.py:132
msgid ""
"Number of seconds between sending events to nova if there are any events "
"to send."
msgstr ""

#: neutron/common/config.py:135
msgid ""
"If True, effort is made to advertise MTU settings to VMs via network "
"methods (DHCP and RA MTU options) when the network's preferred MTU is "
"known."
msgstr ""

#: neutron/common/config.py:139
msgid "IPAM driver to use."
msgstr ""

#: neutron/common/config.py:141
msgid ""
"If True, then allow plugins that support it to create VLAN transparent "
"networks."
msgstr ""

#: neutron/common/config.py:148
msgid ""
"Where to store Neutron state files. This directory must be writable by "
"the agent."
msgstr ""

#: neutron/common/config.py:185
msgid ""
"Name of nova region to use. Useful if keystone manages more than one "
"region."
msgstr ""

#: neutron/common/config.py:207
#, python-format
msgid "Base MAC: %s"
msgstr ""

#: neutron/common/config.py:248
#, python-format
msgid "Unable to load %(app_name)s from configuration file %(config_path)s."
msgstr ""

#: neutron/common/exceptions.py:31
msgid "An unknown exception occurred."
msgstr ""

#: neutron/common/exceptions.py:56
#, python-format
msgid "Bad %(resource)s request: %(msg)s"
msgstr ""

#: neutron/common/exceptions.py:68
msgid "Not authorized."
msgstr ""

#: neutron/common/exceptions.py:72
msgid "The service is unavailable"
msgstr ""

#: neutron/common/exceptions.py:76
#, python-format
msgid "Not supported: %(msg)s"
msgstr ""

#: neutron/common/exceptions.py:80
#, python-format
msgid "User does not have admin privileges: %(reason)s"
msgstr ""

#: neutron/common/exceptions.py:84
#, python-format
msgid "Object %(id)s not found."
msgstr ""

#: neutron/common/exceptions.py:88
#, python-format
msgid "Network %(net_id)s could not be found"
msgstr ""

#: neutron/common/exceptions.py:92
#, python-format
msgid "Subnet %(subnet_id)s could not be found"
msgstr ""

#: neutron/common/exceptions.py:96
#, python-format
msgid "Subnet pool %(subnetpool_id)s could not be found"
msgstr ""

#: neutron/common/exceptions.py:100
#, python-format
msgid "Port %(port_id)s could not be found"
msgstr ""

#: neutron/common/exceptions.py:104
#, python-format
msgid "QoS policy %(policy_id)s could not be found"
msgstr ""

#: neutron/common/exceptions.py:108
#, python-format
msgid "QoS rule %(rule_id)s for policy %(policy_id)s could not be found"
msgstr ""

#: neutron/common/exceptions.py:113
#, python-format
msgid "Port %(port_id)s could not be found on network %(net_id)s"
msgstr ""

#: neutron/common/exceptions.py:118
#, python-format
msgid ""
"QoS binding for port %(port_id)s and policy %(policy_id)s could not be "
"found"
msgstr ""

#: neutron/common/exceptions.py:123
#, python-format
msgid ""
"QoS binding for network %(net_id)s and policy %(policy_id)s could not be "
"found"
msgstr ""

#: neutron/common/exceptions.py:128
msgid "Policy configuration policy.json could not be found"
msgstr ""

#: neutron/common/exceptions.py:132
#, python-format
msgid "Failed to init policy %(policy)s because %(reason)s"
msgstr ""

#: neutron/common/exceptions.py:136
#, python-format
msgid "Failed to check policy %(policy)s because %(reason)s"
msgstr ""

#: neutron/common/exceptions.py:140
#, python-format
msgid "Unsupported port state: %(port_state)s"
msgstr ""

#: neutron/common/exceptions.py:144
msgid "The resource is inuse"
msgstr ""

#: neutron/common/exceptions.py:148
#, python-format
msgid "QoS Policy %(policy_id)s is used by %(object_type)s %(object_id)s."
msgstr ""

#: neutron/common/exceptions.py:153
#, python-format
msgid ""
"Unable to complete operation on network %(net_id)s. There are one or more"
" ports still in use on the network."
msgstr ""

#: neutron/common/exceptions.py:158
#, python-format
msgid "Unable to complete operation on subnet %(subnet_id)s. %(reason)s"
msgstr ""

#: neutron/common/exceptions.py:163
msgid "One or more ports have an IP allocation from this subnet."
msgstr ""

#: neutron/common/exceptions.py:169
#, python-format
msgid ""
"Unable to complete operation on port %(port_id)s for network %(net_id)s. "
"Port already has an attached device %(device_id)s."
msgstr ""

#: neutron/common/exceptions.py:175
#, python-format
msgid "Port %(port_id)s cannot be deleted directly via the port API: %(reason)s"
msgstr ""

#: neutron/common/exceptions.py:180
#, python-format
msgid ""
"Unable to complete operation on port %(port_id)s, port is already bound, "
"port type: %(vif_type)s, old_mac %(old_mac)s, new_mac %(new_mac)s"
msgstr ""

#: neutron/common/exceptions.py:186
#, python-format
msgid ""
"Unable to complete operation for network %(net_id)s. The mac address "
"%(mac)s is in use."
msgstr ""

#: neutron/common/exceptions.py:192
#, python-format
msgid ""
"Unable to complete operation for %(subnet_id)s. The number of host routes"
" exceeds the limit %(quota)s."
msgstr ""

#: neutron/common/exceptions.py:198
#, python-format
msgid ""
"Unable to complete operation for %(subnet_id)s. The number of DNS "
"nameservers exceeds the limit %(quota)s."
msgstr ""

#: neutron/common/exceptions.py:203
#, python-format
msgid ""
"IP address %(ip_address)s is not a valid IP for any of the subnets on the"
" specified network."
msgstr ""

#: neutron/common/exceptions.py:208
#, python-format
msgid "IP address %(ip_address)s is not a valid IP for the specified subnet."
msgstr ""

#: neutron/common/exceptions.py:213
#, python-format
msgid ""
"Unable to complete operation for network %(net_id)s. The IP address "
"%(ip_address)s is in use."
msgstr ""

#: neutron/common/exceptions.py:218
#, python-format
msgid ""
"Unable to create the network. The VLAN %(vlan_id)s on physical network "
"%(physical_network)s is in use."
msgstr ""

#: neutron/common/exceptions.py:224
#, python-format
msgid ""
"Unable to create the flat network. Physical network %(physical_network)s "
"is in use."
msgstr ""

#: neutron/common/exceptions.py:229
#, python-format
msgid "Unable to create the network. The tunnel ID %(tunnel_id)s is in use."
msgstr ""

#: neutron/common/exceptions.py:234
msgid "Tenant network creation is not enabled."
msgstr ""

#: neutron/common/exceptions.py:242
msgid ""
"Unable to create the network. No tenant network is available for "
"allocation."
msgstr ""

#: neutron/common/exceptions.py:247
msgid ""
"Unable to create the network. No available network found in maximum "
"allowed attempts."
msgstr ""

#: neutron/common/exceptions.py:252
#, python-format
msgid ""
"Subnet on port %(port_id)s does not match the requested subnet "
"%(subnet_id)s"
msgstr ""

#: neutron/common/exceptions.py:257
#, python-format
msgid "Malformed request body: %(reason)s"
msgstr ""

#: neutron/common/exceptions.py:267
#, python-format
msgid "Invalid input for operation: %(error_message)s."
msgstr ""

#: neutron/common/exceptions.py:271
#, python-format
msgid "The allocation pool %(pool)s is not valid."
msgstr ""

#: neutron/common/exceptions.py:275
#, python-format
msgid ""
"Operation %(op)s is not supported for device_owner %(device_owner)s on "
"port %(port_id)s."
msgstr ""

#: neutron/common/exceptions.py:280
#, python-format
msgid ""
"Found overlapping allocation pools: %(pool_1)s %(pool_2)s for subnet "
"%(subnet_cidr)s."
msgstr ""

#: neutron/common/exceptions.py:285
#, python-format
msgid "The allocation pool %(pool)s spans beyond the subnet cidr %(subnet_cidr)s."
msgstr ""

#: neutron/common/exceptions.py:290
#, python-format
msgid "Unable to generate unique mac on network %(net_id)s."
msgstr ""

#: neutron/common/exceptions.py:294
#, python-format
msgid "No more IP addresses available on network %(net_id)s."
msgstr ""

#: neutron/common/exceptions.py:298
#, python-format
msgid "Bridge %(bridge)s does not exist."
msgstr ""

#: neutron/common/exceptions.py:302
#, python-format
msgid "Creation failed. %(dev_name)s already exists."
msgstr ""

#: neutron/common/exceptions.py:306
#, python-format
msgid "Unknown quota resources %(unknown)s."
msgstr ""

#: neutron/common/exceptions.py:310
#, python-format
msgid "Quota exceeded for resources: %(overs)s"
msgstr ""

#: neutron/common/exceptions.py:314
msgid "Tenant-id was missing from Quota request"
msgstr ""

#: neutron/common/exceptions.py:318
#, python-format
msgid ""
"Change would make usage less than 0 for the following resources: "
"%(unders)s"
msgstr ""

#: neutron/common/exceptions.py:323
#, python-format
msgid ""
"Unable to reconfigure sharing settings for network %(network)s. Multiple "
"tenants are using it"
msgstr ""

#: neutron/common/exceptions.py:328
#, python-format
msgid "Invalid extension environment: %(reason)s"
msgstr ""

#: neutron/common/exceptions.py:332
#, python-format
msgid "Extensions not found: %(extensions)s"
msgstr ""

#: neutron/common/exceptions.py:336
#, python-format
msgid "Invalid content type %(content_type)s"
msgstr ""

#: neutron/common/exceptions.py:340
#, python-format
msgid "Unable to find any IP address on external network %(net_id)s."
msgstr ""

#: neutron/common/exceptions.py:345
msgid "More than one external network exists"
msgstr ""

#: neutron/common/exceptions.py:349
#, python-format
msgid "An invalid value was provided for %(opt_name)s: %(opt_value)s"
msgstr ""

#: neutron/common/exceptions.py:354
#, python-format
msgid "Gateway ip %(ip_address)s conflicts with allocation pool %(pool)s"
msgstr ""

#: neutron/common/exceptions.py:359
#, python-format
msgid ""
"Current gateway ip %(ip_address)s already in use by port %(port_id)s. "
"Unable to update."
msgstr ""

#: neutron/common/exceptions.py:364
#, python-format
msgid "Invalid network VLAN range: '%(vlan_range)s' - '%(error)s'"
msgstr ""

#: neutron/common/exceptions.py:374
msgid "Empty physical network name."
msgstr ""

#: neutron/common/exceptions.py:378
#, python-format
msgid "Invalid network Tunnel range: '%(tunnel_range)s' - %(error)s"
msgstr ""

#: neutron/common/exceptions.py:389
#, python-format
msgid "Invalid network VXLAN port range: '%(vxlan_range)s'"
msgstr ""

#: neutron/common/exceptions.py:393
msgid "VXLAN Network unsupported."
msgstr ""

#: neutron/common/exceptions.py:397
#, python-format
msgid "Found duplicate extension: %(alias)s"
msgstr ""

#: neutron/common/exceptions.py:401
#, python-format
msgid ""
"The following device_id %(device_id)s is not owned by your tenant or "
"matches another tenants router."
msgstr ""

#: neutron/common/exceptions.py:406
#, python-format
msgid "Invalid CIDR %(input)s given as IP prefix"
msgstr ""

#: neutron/common/exceptions.py:410
#, python-format
msgid "Router '%(router_id)s' is not compatible with this agent"
msgstr ""

#: neutron/common/exceptions.py:414
#, python-format
msgid "Router '%(router_id)s' cannot be both DVR and HA"
msgstr ""

#: neutron/common/exceptions.py:435
msgid "network_id and router_id are None. One must be provided."
msgstr ""

#: neutron/common/exceptions.py:439
msgid "Aborting periodic_sync_routers_task due to an error"
msgstr ""

#: neutron/common/exceptions.py:451
#, python-format
msgid "%(driver)s: Internal driver error."
msgstr ""

#: neutron/common/exceptions.py:455
msgid "Unspecified minimum subnet pool prefix"
msgstr ""

#: neutron/common/exceptions.py:459
msgid "Empty subnet pool prefix list"
msgstr ""

#: neutron/common/exceptions.py:463
msgid "Cannot mix IPv4 and IPv6 prefixes in a subnet pool"
msgstr ""

#: neutron/common/exceptions.py:467
#, python-format
msgid "Prefix '%(prefix)s' not supported in IPv%(version)s pool"
msgstr ""

#: neutron/common/exceptions.py:471
#, python-format
msgid ""
"Illegal prefix bounds: %(prefix_type)s=%(prefixlen)s, "
"%(base_prefix_type)s=%(base_prefixlen)s"
msgstr ""

#: neutron/common/exceptions.py:476
#, python-format
msgid "Illegal update to prefixes: %(msg)s"
msgstr ""

#: neutron/common/exceptions.py:480
#, python-format
msgid "Failed to allocate subnet: %(reason)s"
msgstr ""

#: neutron/common/exceptions.py:484
msgid ""
"Failed to associate address scope: subnetpools within an address scope "
"must have unique prefixes"
msgstr ""

#: neutron/common/exceptions.py:489
#, python-format
msgid ""
"Illegal subnetpool association: subnetpool %(subnetpool_id)s  cannot be "
"associated with address scope %(address_scope_id)s"
msgstr ""

#: neutron/common/exceptions.py:495
#, python-format
msgid "Illegal subnetpool update : %(reason)s"
msgstr ""

#: neutron/common/exceptions.py:499
#, python-format
msgid ""
"Unable to allocate subnet with prefix length %(prefixlen)s, minimum "
"allowed prefix is %(min_prefixlen)s"
msgstr ""

#: neutron/common/exceptions.py:504
#, python-format
msgid ""
"Unable to allocate subnet with prefix length %(prefixlen)s, maximum "
"allowed prefix is %(max_prefixlen)s"
msgstr ""

#: neutron/common/exceptions.py:509
#, python-format
msgid "Unable to delete subnet pool: %(reason)s"
msgstr ""

#: neutron/common/exceptions.py:513
msgid "Per-tenant subnet pool prefix quota exceeded"
msgstr ""

#: neutron/common/exceptions.py:517
#, python-format
msgid "Device '%(device_name)s' does not exist"
msgstr ""

#: neutron/common/exceptions.py:521
msgid ""
"Subnets hosted on the same network must be allocated from the same subnet"
" pool"
msgstr ""

#: neutron/common/exceptions.py:526
#, python-format
msgid "Object action %(action)s failed because: %(reason)s"
msgstr ""

#: neutron/common/exceptions.py:530
msgid "IPtables conntrack zones exhausted, iptables rules cannot be applied."
msgstr ""

#: neutron/common/ipv6_utils.py:36
msgid "Unable to generate IP address by EUI64 for IPv4 prefix"
msgstr ""

#: neutron/common/ipv6_utils.py:43
#, python-format
msgid ""
"Bad prefix or mac format for generating IPv6 address by EUI-64: "
"%(prefix)s, %(mac)s:"
msgstr ""

#: neutron/common/ipv6_utils.py:47
#, python-format
msgid "Bad prefix type for generate IPv6 address by EUI-64: %s"
msgstr ""

#: neutron/common/utils.py:216
#: neutron/plugins/ml2/drivers/mech_sriov/agent/common/config.py:36
#, python-format
msgid "Invalid mapping: '%s'"
msgstr ""

#: neutron/common/utils.py:219
#: neutron/plugins/ml2/drivers/mech_sriov/agent/common/config.py:39
#, python-format
msgid "Missing key in mapping: '%s'"
msgstr ""

#: neutron/common/utils.py:222
#, python-format
msgid "Missing value in mapping: '%s'"
msgstr ""

#: neutron/common/utils.py:224
#, python-format
msgid "Key %(key)s in mapping: '%(mapping)s' not unique"
msgstr ""

#: neutron/common/utils.py:227
#, python-format
msgid "Value %(value)s in mapping: '%(mapping)s' not unique"
msgstr ""

#: neutron/common/utils.py:433
msgid "Illegal IP version number"
msgstr ""

#: neutron/db/address_scope_db.py:89
msgid "Shared address scope can't be unshared"
msgstr ""

#: neutron/db/agents_db.py:39
msgid ""
"Seconds to regard the agent is down; should be at least twice "
"report_interval, to be sure the agent is down for good."
msgstr ""

#: neutron/db/agents_db.py:44
msgid ""
"Representing the resource type whose load is being reported by the agent."
" This can be \"networks\", \"subnets\" or \"ports\". When specified "
"(Default is networks), the server will extract particular load sent as "
"part of its agent configuration object from the agent report state, which"
" is the number of resources being consumed, at every "
"report_interval.dhcp_load_type can be used in combination with "
"network_scheduler_driver = "
"neutron.scheduler.dhcp_agent_scheduler.WeightScheduler When the "
"network_scheduler_driver is WeightScheduler, dhcp_load_type can be "
"configured to represent the choice for the resource being balanced. "
"Example: dhcp_load_type=networks"
msgstr ""

#: neutron/db/agents_db.py:60
msgid ""
"Agent starts with admin_state_up=False when enable_new_agents=False. In "
"the case, user's resources will not be scheduled automatically to the "
"agent until admin changes admin_state_up to True."
msgstr ""

#: neutron/db/agentschedulers_db.py:44
msgid "Driver to use for scheduling network to DHCP agent"
msgstr ""

#: neutron/db/agentschedulers_db.py:46
msgid "Allow auto scheduling networks to DHCP agent."
msgstr ""

#: neutron/db/agentschedulers_db.py:48
msgid "Automatically remove networks from offline DHCP agents."
msgstr ""

#: neutron/db/agentschedulers_db.py:51
msgid ""
"Number of DHCP agents scheduled to host a tenant network. If this number "
"is greater than 1, the scheduler automatically assigns multiple DHCP "
"agents for a given tenant network, providing high availability for DHCP "
"service."
msgstr ""

#: neutron/db/agentschedulers_db.py:58
msgid ""
"Enable services on an agent with admin_state_up False. If this option is "
"False, when admin_state_up of an agent is turned False, services on it "
"will be disabled. Agents with admin_state_up False are not selected for "
"automatic scheduling regardless of this option. But manual scheduling to "
"such agents is available if this option is True."
msgstr ""

#: neutron/db/common_db_mixin.py:177
msgid "Cannot create resource for another tenant"
msgstr ""

#: neutron/db/db_base_plugin_v2.py:136
msgid "Only admins can manipulate policies on networks they do not own."
msgstr ""

#: neutron/db/db_base_plugin_v2.py:195 neutron/db/db_base_plugin_v2.py:199
#, python-format
msgid "Invalid route: %s"
msgstr ""

#: neutron/db/db_base_plugin_v2.py:251
#, python-format
msgid ""
"Invalid CIDR %s for IPv6 address mode. OpenStack uses the EUI-64 address "
"format, which requires the prefix to be /64."
msgstr ""

#: neutron/db/db_base_plugin_v2.py:259
#, python-format
msgid ""
"ipv6_ra_mode set to '%(ra_mode)s' with ipv6_address_mode set to "
"'%(addr_mode)s' is not valid. If both attributes are set, they must be "
"the same value"
msgstr ""

#: neutron/db/db_base_plugin_v2.py:267
msgid ""
"ipv6_ra_mode or ipv6_address_mode cannot be set when enable_dhcp is set "
"to False."
msgstr ""

#: neutron/db/db_base_plugin_v2.py:273
msgid "Cannot disable enable_dhcp with ipv6 attributes set"
msgstr ""

#: neutron/db/db_base_plugin_v2.py:422
#, python-format
msgid "%(name)s '%(addr)s' does not match the ip_version '%(ip_version)s'"
msgstr ""

#: neutron/db/db_base_plugin_v2.py:449
msgid "Subnet has a prefix length that is incompatible with DHCP service enabled."
msgstr ""

#: neutron/db/db_base_plugin_v2.py:470
msgid "Gateway is not valid on subnet"
msgstr ""

#: neutron/db/db_base_plugin_v2.py:490 neutron/db/db_base_plugin_v2.py:504
#: neutron/plugins/opencontrail/contrail_plugin.py:314
msgid "new subnet"
msgstr ""

#: neutron/db/db_base_plugin_v2.py:497
#, python-format
msgid "Error parsing dns address %s"
msgstr ""

#: neutron/db/db_base_plugin_v2.py:513
msgid "ipv6_ra_mode is not valid when ip_version is 4"
msgstr ""

#: neutron/db/db_base_plugin_v2.py:517
msgid "ipv6_address_mode is not valid when ip_version is 4"
msgstr ""

#: neutron/db/db_base_plugin_v2.py:525
msgid "Prefix Delegation can only be used with IPv6 subnets."
msgstr ""

#: neutron/db/db_base_plugin_v2.py:535
msgid "IPv6 RA Mode must be SLAAC or Stateless for Prefix Delegation."
msgstr ""

#: neutron/db/db_base_plugin_v2.py:541
msgid "IPv6 Address Mode must be SLAAC or Stateless for Prefix Delegation."
msgstr ""

#: neutron/db/db_base_plugin_v2.py:620
msgid "ip_version must be specified in the absence of cidr and subnetpool_id"
msgstr ""

#: neutron/db/db_base_plugin_v2.py:637
msgid "cidr and prefixlen must not be supplied together"
msgstr ""

#: neutron/db/db_base_plugin_v2.py:662
msgid "A cidr must be specified in the absence of a subnet pool"
msgstr ""

#: neutron/db/db_base_plugin_v2.py:914
#, python-format
msgid ""
"subnetpool %(subnetpool_id)s cannot be updated when associated with "
"shared address scope %(address_scope_id)s"
msgstr ""

#: neutron/db/db_base_plugin_v2.py:969
msgid "Existing prefixes must be a subset of the new prefixes"
msgstr ""

#: neutron/db/db_base_plugin_v2.py:1042
msgid "Subnet pool has existing allocations"
msgstr ""

#: neutron/db/db_base_plugin_v2.py:1049
msgid "mac address update"
msgstr ""

#: neutron/db/dvr_mac_db.py:38
msgid ""
"The base mac address used for unique DVR instances by Neutron. The first "
"3 octets will remain unchanged. If the 4th octet is not 00, it will also "
"be used. The others will be randomly generated. The 'dvr_base_mac' *must*"
" be different from 'base_mac' to avoid mixing them up with MAC's "
"allocated for tenant ports. A 4 octet example would be dvr_base_mac = "
"fa:16:3f:4f:00:00. The default is 3 octet"
msgstr ""

#: neutron/db/extraroute_db.py:36
msgid "Maximum number of routes"
msgstr ""

#: neutron/db/extraroute_db.py:91
msgid "the nexthop is not connected with router"
msgstr ""

#: neutron/db/extraroute_db.py:96
msgid "the nexthop is used by router"
msgstr ""

#: neutron/db/flavors_db.py:35
#, python-format
msgid "Flavor %(flavor_id)s could not be found"
msgstr ""

#: neutron/db/flavors_db.py:39
#, python-format
msgid "Flavor %(flavor_id)s is used by some service instance"
msgstr ""

#: neutron/db/flavors_db.py:43
#, python-format
msgid "Service Profile %(sp_id)s could not be found"
msgstr ""

#: neutron/db/flavors_db.py:47
#, python-format
msgid "Service Profile %(sp_id)s is used by some service instance"
msgstr ""

#: neutron/db/flavors_db.py:51
#, python-format
msgid "Service Profile %(sp_id)s is already associated with flavor %(fl_id)s"
msgstr ""

#: neutron/db/flavors_db.py:56
#, python-format
msgid "Service Profile %(sp_id)s is not associated with flavor %(fl_id)s"
msgstr ""

#: neutron/db/ipam_backend_mixin.py:82
msgid "allocation_pools allowed only for specific subnet requests."
msgstr ""

#: neutron/db/ipam_backend_mixin.py:93
#, python-format
msgid "Cannot allocate IPv%(req_ver)s subnet from IPv%(pool_ver)s subnet pool"
msgstr ""

#: neutron/db/ipam_backend_mixin.py:213
msgid "0 is not allowed as CIDR prefix length"
msgstr ""

#: neutron/db/ipam_backend_mixin.py:224
#, python-format
msgid ""
"Requested subnet with cidr: %(cidr)s for network: %(network_id)s overlaps"
" with another subnet"
msgstr ""

#: neutron/db/ipam_backend_mixin.py:302
#: neutron/plugins/opencontrail/contrail_plugin.py:391
msgid "Exceeded maximim amount of fixed ips per port"
msgstr ""

#: neutron/db/ipam_backend_mixin.py:309
#, python-format
msgid ""
"Failed to create port on network %(network_id)s, because fixed_ips "
"included invalid subnet %(subnet_id)s"
msgstr ""

#: neutron/db/ipam_backend_mixin.py:323
msgid "IP allocation requires subnet_id or ip_address"
msgstr ""

#: neutron/db/ipam_backend_mixin.py:371
msgid "Exceeded maximum amount of fixed ips per port"
msgstr ""

#: neutron/db/ipam_non_pluggable_backend.py:259
#: neutron/db/ipam_pluggable_backend.py:249
#, python-format
msgid ""
"IPv6 address %(address)s can not be directly assigned to a port on subnet"
" %(id)s since the subnet is configured for automatic addresses"
msgstr ""

#: neutron/db/l3_agentschedulers_db.py:47
msgid "Driver to use for scheduling router to a default L3 agent"
msgstr ""

#: neutron/db/l3_agentschedulers_db.py:50
msgid "Allow auto scheduling of routers to L3 agent."
msgstr ""

#: neutron/db/l3_agentschedulers_db.py:52
msgid ""
"Automatically reschedule routers from offline L3 agents to online L3 "
"agents."
msgstr ""

#: neutron/db/l3_db.py:279
#, python-format
msgid "No eligible l3 agent associated with external network %s found"
msgstr ""

#: neutron/db/l3_db.py:317
#, python-format
msgid "Network %s is not an external network"
msgstr ""

#: neutron/db/l3_db.py:327
#, python-format
msgid "External IP %s is the same as the gateway IP"
msgstr ""

#: neutron/db/l3_db.py:477
#, python-format
msgid "Router already has a port on subnet %s"
msgstr ""

#: neutron/db/l3_db.py:494
#, python-format
msgid ""
"Cidr %(subnet_cidr)s of subnet %(subnet_id)s overlaps with cidr %(cidr)s "
"of subnet %(sub_id)s"
msgstr ""

#: neutron/db/l3_db.py:510 neutron/plugins/opencontrail/contrail_plugin.py:502
msgid "Either subnet_id or port_id must be specified"
msgstr ""

#: neutron/db/l3_db.py:514 neutron/plugins/opencontrail/contrail_plugin.py:512
msgid "Cannot specify both subnet-id and port-id"
msgstr ""

#: neutron/db/l3_db.py:535
#, python-format
msgid ""
"Cannot have multiple router ports with the same network id if both "
"contain IPv6 subnets. Existing port %(p)s has IPv6 subnet(s) and network "
"id %(nid)s"
msgstr ""

#: neutron/db/l3_db.py:577
msgid "Subnet for router interface must have a gateway IP"
msgstr ""

#: neutron/db/l3_db.py:581
#, python-format
msgid ""
"IPv6 subnet %s configured to receive RAs from an external router cannot "
"be added to Neutron Router."
msgstr ""

#: neutron/db/l3_db.py:792
#, python-format
msgid "Cannot add floating IP to port on subnet %s which has no gateway_ip"
msgstr ""

#: neutron/db/l3_db.py:837
#, python-format
msgid ""
"Port %(port_id)s is associated with a different tenant than Floating IP "
"%(floatingip_id)s and therefore cannot be bound."
msgstr ""

#: neutron/db/l3_db.py:841
#, python-format
msgid ""
"Cannot create floating IP and bind it to Port %s, since that port is "
"owned by a different tenant."
msgstr ""

#: neutron/db/l3_db.py:853
#, python-format
msgid ""
"Floating IP %(floatingip_id)s is associated with non-IPv4 address "
"%s(internal_ip)s and therefore cannot be bound."
msgstr ""

#: neutron/db/l3_db.py:857
#, python-format
msgid ""
"Cannot create floating IP and bind it to %s, since that is not an IPv4 "
"address."
msgstr ""

#: neutron/db/l3_db.py:865
#, python-format
msgid "Port %(id)s does not have fixed ip %(address)s"
msgstr ""

#: neutron/db/l3_db.py:872
#, python-format
msgid "Cannot add floating IP to port %s that has no fixed IPv4 addresses"
msgstr ""

#: neutron/db/l3_db.py:876
#, python-format
msgid ""
"Port %s has multiple fixed IPv4 addresses.  Must provide a specific IPv4 "
"address when assigning a floating IP"
msgstr ""

#: neutron/db/l3_db.py:905
msgid "fixed_ip_address cannot be specified without a port_id"
msgstr ""

#: neutron/db/l3_db.py:949
#, python-format
msgid "Network %s is not a valid external network"
msgstr ""

#: neutron/db/l3_db.py:953
#, python-format
msgid "Network %s does not contain any IPv4 subnet"
msgstr ""

#: neutron/db/l3_db.py:1102
#, python-format
msgid "has device owner %s"
msgstr ""

#: neutron/db/l3_dvr_db.py:45
msgid ""
"System-wide flag to determine the type of router that tenants can create."
" Only admin can override."
msgstr ""

#: neutron/db/l3_dvr_db.py:83
msgid "Migration from distributed router to centralized"
msgstr ""

#: neutron/db/l3_dvr_db.py:89
msgid ""
"Cannot upgrade active router to distributed. Please set router "
"admin_state_up to False prior to upgrade."
msgstr ""

#: neutron/db/l3_dvr_db.py:541
msgid "Unable to create the Agent Gateway Port"
msgstr ""

#: neutron/db/l3_dvr_db.py:572
msgid "Unable to create the SNAT Interface Port"
msgstr ""

#: neutron/db/l3_gwmode_db.py:29
msgid ""
"Define the default value of enable_snat if not provided in "
"external_gateway_info."
msgstr ""

#: neutron/db/l3_hamode_db.py:47
msgid "Enable HA mode for virtual routers."
msgstr ""

#: neutron/db/l3_hamode_db.py:50
msgid "Maximum number of agents on which a router will be scheduled."
msgstr ""

#: neutron/db/l3_hamode_db.py:54
msgid "Minimum number of agents on which a router will be scheduled."
msgstr ""

#: neutron/db/l3_hamode_db.py:58
msgid "Subnet used for the l3 HA admin network."
msgstr ""

#: neutron/db/l3_hamode_db.py:60
msgid ""
"The network type to use when creating the HA network for an HA router. By"
" default or if empty, the first 'tenant_network_types' is used. This is "
"helpful when the VRRP traffic should use a specific network which is not "
"the default one."
msgstr ""

#: neutron/db/l3_hamode_db.py:66
msgid "The physical network name with which the HA network can be created."
msgstr ""

#: neutron/db/rbac_db_models.py:26
#, python-format
msgid ""
"Invalid action '%(action)s' for object type '%(object_type)s'. Valid "
"actions: %(valid_actions)s"
msgstr ""

#: neutron/db/securitygroups_db.py:271 neutron/db/securitygroups_db.py:613
#, python-format
msgid "cannot be deleted due to %s"
msgstr ""

#: neutron/db/securitygroups_db.py:673
msgid "Default security group"
msgstr ""

#: neutron/db/securitygroups_rpc_base.py:58
#, python-format
msgid "%s must implement get_port_from_device or get_ports_from_devices."
msgstr ""

#: neutron/db/sqlalchemyutils.py:73
#, python-format
msgid "%s is invalid attribute for sort_key"
msgstr ""

#: neutron/db/sqlalchemyutils.py:76
#, python-format
msgid ""
"The attribute '%(attr)s' is reference to other resource, can't used by "
"sort '%(resource)s'"
msgstr ""

#: neutron/db/migration/__init__.py:51
#, python-format
msgid "%s cannot be called while in offline mode"
msgstr ""

#: neutron/db/migration/cli.py:55
msgid "Neutron plugin provider module"
msgstr ""

#: neutron/db/migration/cli.py:58
msgid ""
"(Deprecated. Use '--subproject neutron-SERVICE' instead.) The advanced "
"service to execute the command against."
msgstr ""

#: neutron/db/migration/cli.py:63
#, python-format
msgid "The subproject to execute the command against. Can be one of: '%s'."
msgstr ""

#: neutron/db/migration/cli.py:68
msgid "Enforce using split branches file structure."
msgstr ""

#: neutron/db/migration/cli.py:74
msgid "Neutron quota driver class"
msgstr ""

#: neutron/db/migration/cli.py:82
msgid "URL to database"
msgstr ""

#: neutron/db/migration/cli.py:85
msgid "Database engine"
msgstr ""

#: neutron/db/migration/cli.py:101
#, python-format
msgid "Running %(cmd)s (%(desc)s) for %(project)s ..."
msgstr ""

#: neutron/db/migration/cli.py:104
#, python-format
msgid "Running %(cmd)s for %(project)s ..."
msgstr ""

#: neutron/db/migration/cli.py:110
msgid "OK"
msgstr ""

#: neutron/db/migration/cli.py:115
#, python-format
msgid "Sub-project %s not installed."
msgstr ""

#: neutron/db/migration/cli.py:134
msgid "Phase upgrade options do not accept revision specification"
msgstr ""

#: neutron/db/migration/cli.py:146
msgid "You must provide a revision or relative delta"
msgstr ""

#: neutron/db/migration/cli.py:151
msgid "Negative relative revision (downgrade) not supported"
msgstr ""

#: neutron/db/migration/cli.py:157
msgid "Use either --delta or relative revision, not both"
msgstr ""

#: neutron/db/migration/cli.py:160
msgid "Negative delta (downgrade) not supported"
msgstr ""

#: neutron/db/migration/cli.py:175
msgid "Downgrade no longer supported"
msgstr ""

#: neutron/db/migration/cli.py:226
#, python-format
msgid ""
"Release aware branch labels (%s) are deprecated. Please switch to expand@"
" and contract@ labels."
msgstr ""

#: neutron/db/migration/cli.py:233
#, python-format
msgid "Unexpected label for script %(script_name)s: %(labels)s"
msgstr ""

#: neutron/db/migration/cli.py:290
#, python-format
msgid "HEADS file does not match migration timeline heads, expected: %s"
msgstr ""

#: neutron/db/migration/cli.py:350
msgid "Available commands"
msgstr ""

#: neutron/db/migration/cli.py:366
#, python-format
msgid "Failed to locate source for %s."
msgstr ""

#: neutron/db/migration/cli.py:438
#, python-format
msgid "Package %s not installed"
msgstr ""

#: neutron/db/migration/cli.py:527
msgid "Cannot specify both --service and --subproject."
msgstr ""

#: neutron/db/migration/alembic_migrations/versions/14be42f3d0a5_default_sec_group_table.py:45
#, python-format
msgid ""
"Some tenants have more than one security group named 'default': "
"%(duplicates)s. All duplicate 'default' security groups must be resolved "
"before upgrading the database."
msgstr ""

#: neutron/debug/commands.py:33
msgid "Unimplemented commands"
msgstr ""

#: neutron/debug/commands.py:45
msgid "ID of network to probe"
msgstr ""

#: neutron/debug/commands.py:49
msgid "Owner type of the device: network/compute"
msgstr ""

#: neutron/debug/commands.py:57
#, python-format
msgid "Probe created : %s "
msgstr ""

#: neutron/debug/commands.py:69
msgid "ID of probe port to delete"
msgstr ""

#: neutron/debug/commands.py:76
#, python-format
msgid "Probe %s deleted"
msgstr ""

#: neutron/debug/commands.py:119
msgid "ID of probe port to execute command"
msgstr ""

#: neutron/debug/commands.py:124
msgid "Command to execute"
msgstr ""

#: neutron/debug/commands.py:144
msgid "Ping timeout"
msgstr ""

#: neutron/debug/commands.py:148
msgid "ID of network"
msgstr ""

#: neutron/debug/shell.py:61
msgid "Config file for interface driver (You may also use l3_agent.ini)"
msgstr ""

#: neutron/debug/shell.py:69
msgid ""
"You must provide a config file for bridge - either --config-file or "
"env[NEUTRON_TEST_CONFIG_FILE]"
msgstr ""

#: neutron/extensions/address_scope.py:65
#, python-format
msgid "Address scope %(address_scope_id)s could not be found"
msgstr ""

#: neutron/extensions/address_scope.py:69
#, python-format
msgid ""
"Unable to complete operation on address scope %(address_scope_id)s. There"
" are one or more subnet pools in use on the address scope"
msgstr ""

#: neutron/extensions/address_scope.py:75
#, python-format
msgid "Unable to update address scope %(address_scope_id)s : %(reason)s"
msgstr ""

#: neutron/extensions/agent.py:62
#, python-format
msgid "Agent %(id)s could not be found"
msgstr ""

#: neutron/extensions/agent.py:66
#, python-format
msgid "Agent with agent_type=%(agent_type)s and host=%(host)s could not be found"
msgstr ""

#: neutron/extensions/agent.py:71
#, python-format
msgid "Multiple agents with agent_type=%(agent_type)s and host=%(host)s found"
msgstr ""

#: neutron/extensions/allowedaddresspairs.py:25
msgid "Maximum number of allowed address pairs"
msgstr ""

#: neutron/extensions/allowedaddresspairs.py:32
msgid "AllowedAddressPair must contain ip_address"
msgstr ""

#: neutron/extensions/allowedaddresspairs.py:36
msgid ""
"Port Security must be enabled in order to have allowed address pairs on a"
" port."
msgstr ""

#: neutron/extensions/allowedaddresspairs.py:41
#, python-format
msgid ""
"Request contains duplicate address pair: mac_address %(mac_address)s "
"ip_address %(ip_address)s."
msgstr ""

#: neutron/extensions/allowedaddresspairs.py:46
#, python-format
msgid "The number of allowed address pair exceeds the maximum %(quota)s."
msgstr ""

#: neutron/extensions/allowedaddresspairs.py:58
msgid "Allowed address pairs must be a list."
msgstr ""

#: neutron/extensions/dhcpagentscheduler.py:123
#, python-format
msgid "Agent %(id)s is not a valid DHCP Agent or has been disabled"
msgstr ""

#: neutron/extensions/dhcpagentscheduler.py:127
#, python-format
msgid ""
"The network %(network_id)s has been already hosted by the DHCP Agent "
"%(agent_id)s."
msgstr ""

#: neutron/extensions/dhcpagentscheduler.py:132
#, python-format
msgid "The network %(network_id)s is not hosted by the DHCP agent %(agent_id)s."
msgstr ""

#: neutron/extensions/dns.py:54
#, python-format
msgid "'%s' exceeds the 255 character FQDN limit"
msgstr ""

#: neutron/extensions/dns.py:58
msgid "Encountered an empty component."
msgstr ""

#: neutron/extensions/dns.py:61
#, python-format
msgid "Name '%s' must not start or end with a hyphen."
msgstr ""

#: neutron/extensions/dns.py:64
#, python-format
msgid ""
"Name '%s' must be 1-63 characters long, each of which can only be "
"alphanumeric or a hyphen."
msgstr ""

#: neutron/extensions/dns.py:69
#, python-format
msgid "TLD '%s' must not be all numeric"
msgstr ""

#: neutron/extensions/dns.py:71
#, python-format
msgid "'%(data)s' not a valid PQDN or FQDN. Reason: %(reason)s"
msgstr ""

#: neutron/extensions/dns.py:87
#, python-format
msgid ""
"The dns_name passed is a PQDN and its size is '%(dns_name_len)s'. The "
"dns_domain option in neutron.conf is set to %(dns_domain)s, with a length"
" of '%(higher_labels_len)s'. When the two are concatenated to form a FQDN"
" (with a '.' at the end), the resulting length exceeds the maximum size "
"of '%(fqdn_max_len)s'"
msgstr ""

#: neutron/extensions/dns.py:104
#, python-format
msgid ""
"The dns_name passed is a FQDN. Its higher level labels must be equal to "
"the dns_domain option in neutron.conf, that has been set to "
"'%(dns_domain)s'. It must also include one or more valid DNS labels to "
"the left of '%(dns_domain)s'"
msgstr ""

#: neutron/extensions/dns.py:131
#, python-format
msgid "'%s' cannot be converted to lowercase string"
msgstr ""

#: neutron/extensions/dvr.py:38
#, python-format
msgid "Distributed Virtual Router Mac Address for host %(host)s does not exist."
msgstr ""

#: neutron/extensions/dvr.py:43
#, python-format
msgid "Unable to generate unique DVR mac for host %(host)s."
msgstr ""

#: neutron/extensions/external_net.py:22
#, python-format
msgid ""
"External network %(net_id)s cannot be updated to be made non-external, "
"since it has existing gateway ports"
msgstr ""

#: neutron/extensions/external_net.py:50
msgid "Adds external network attribute to network resource."
msgstr ""

#: neutron/extensions/extra_dhcp_opt.py:23
#, python-format
msgid "ExtraDhcpOpt %(id)s could not be found"
msgstr ""

#: neutron/extensions/extra_dhcp_opt.py:27
#, python-format
msgid "Invalid data format for extra-dhcp-opt: %(data)s"
msgstr ""

#: neutron/extensions/extraroute.py:23
#, python-format
msgid "Invalid format for routes: %(routes)s, %(reason)s"
msgstr ""

#: neutron/extensions/extraroute.py:27
#, python-format
msgid ""
"Router interface for subnet %(subnet_id)s on router %(router_id)s cannot "
"be deleted, as it is required by one or more routes."
msgstr ""

#: neutron/extensions/extraroute.py:33
#, python-format
msgid ""
"Unable to complete operation for %(router_id)s. The number of routes "
"exceeds the maximum %(quota)s."
msgstr ""

#: neutron/extensions/l3.py:29
#, python-format
msgid "Router %(router_id)s could not be found"
msgstr ""

#: neutron/extensions/l3.py:33
#, python-format
msgid "Router %(router_id)s %(reason)s"
msgstr ""

#: neutron/extensions/l3.py:42
#, python-format
msgid "Router %(router_id)s does not have an interface with id %(port_id)s"
msgstr ""

#: neutron/extensions/l3.py:47
#, python-format
msgid "Router %(router_id)s has no interface on subnet %(subnet_id)s"
msgstr ""

#: neutron/extensions/l3.py:52
#, python-format
msgid ""
"Router interface for subnet %(subnet_id)s on router %(router_id)s cannot "
"be deleted, as it is required by one or more floating IPs."
msgstr ""

#: neutron/extensions/l3.py:58
#, python-format
msgid "Floating IP %(floatingip_id)s could not be found"
msgstr ""

#: neutron/extensions/l3.py:62
#, python-format
msgid ""
"External network %(external_network_id)s is not reachable from subnet "
"%(subnet_id)s.  Therefore, cannot associate Port %(port_id)s with a "
"Floating IP."
msgstr ""

#: neutron/extensions/l3.py:68
#, python-format
msgid ""
"Cannot associate floating IP %(floating_ip_address)s (%(fip_id)s) with "
"port %(port_id)s using fixed IP %(fixed_ip)s, as that fixed IP already "
"has a floating IP on external network %(net_id)s."
msgstr ""

#: neutron/extensions/l3.py:75
#, python-format
msgid ""
"Gateway cannot be updated for router %(router_id)s, since a gateway to "
"external network %(net_id)s is required by one or more floating IPs."
msgstr ""

#: neutron/extensions/l3.py:156
msgid "Number of routers allowed per tenant. A negative value means unlimited."
msgstr ""

#: neutron/extensions/l3.py:160
msgid ""
"Number of floating IPs allowed per tenant. A negative value means "
"unlimited."
msgstr ""

#: neutron/extensions/l3_ext_ha_mode.py:33
msgid "Currently distributed HA routers are not supported."
msgstr ""

#: neutron/extensions/l3_ext_ha_mode.py:38
#, python-format
msgid ""
"Failed to allocate a VRID in the network %(network_id)s for the router "
"%(router_id)s after %(max_tries)s tries."
msgstr ""

#: neutron/extensions/l3_ext_ha_mode.py:43
#, python-format
msgid ""
"No more Virtual Router Identifier (VRID) available when creating router "
"%(router_id)s. The limit of number of HA Routers per tenant is 254."
msgstr ""

#: neutron/extensions/l3_ext_ha_mode.py:49
#, python-format
msgid ""
"The HA Network CIDR specified in the configuration file isn't valid; "
"%(cidr)s."
msgstr ""

#: neutron/extensions/l3_ext_ha_mode.py:54
#, python-format
msgid ""
"Not enough l3 agents available to ensure HA. Minimum required "
"%(min_agents)s, available %(num_agents)s."
msgstr ""

#: neutron/extensions/l3_ext_ha_mode.py:59
#, python-format
msgid ""
"max_l3_agents_per_router %(max_agents)s config parameter is not valid. It"
" has to be greater than or equal to min_l3_agents_per_router "
"%(min_agents)s."
msgstr ""

#: neutron/extensions/l3_ext_ha_mode.py:65
#, python-format
msgid ""
"min_l3_agents_per_router config parameter is not valid. It has to be "
"equal to or more than %s for HA."
msgstr ""

#: neutron/extensions/l3agentscheduler.py:153
#, python-format
msgid "Agent %(id)s is not a L3 Agent or has been disabled"
msgstr ""

#: neutron/extensions/l3agentscheduler.py:157
#, python-format
msgid ""
"The router %(router_id)s has been already hosted by the L3 Agent "
"%(agent_id)s."
msgstr ""

#: neutron/extensions/l3agentscheduler.py:162
#, python-format
msgid "Failed scheduling router %(router_id)s to the L3 Agent %(agent_id)s."
msgstr ""

#: neutron/extensions/l3agentscheduler.py:167
#, python-format
msgid "Failed rescheduling router %(router_id)s: no eligible l3 agent found."
msgstr ""

#: neutron/extensions/l3agentscheduler.py:172
#, python-format
msgid ""
"Cannot host %(router_type)s router %(router_id)s on %(agent_mode)s L3 "
"agent %(agent_id)s."
msgstr ""

#: neutron/extensions/l3agentscheduler.py:177
#, python-format
msgid ""
"Not allowed to manually assign a %(router_type)s router %(router_id)s "
"from an existing DVR node to another L3 agent %(agent_id)s."
msgstr ""

#: neutron/extensions/metering.py:31
#, python-format
msgid "Metering label %(label_id)s does not exist"
msgstr ""

#: neutron/extensions/metering.py:35
msgid "Duplicate Metering Rule in POST."
msgstr ""

#: neutron/extensions/metering.py:39
#, python-format
msgid "Metering label rule %(rule_id)s does not exist"
msgstr ""

#: neutron/extensions/metering.py:43
#, python-format
msgid ""
"Metering label rule with remote_ip_prefix %(remote_ip_prefix)s overlaps "
"another"
msgstr ""

#: neutron/extensions/multiprovidernet.py:27
msgid "Segments and provider values cannot both be set."
msgstr ""

#: neutron/extensions/multiprovidernet.py:31
msgid "Duplicate segment entry in request."
msgstr ""

#: neutron/extensions/portsecurity.py:21
msgid ""
"Port has security group associated. Cannot disable port security or ip "
"address until security group is removed"
msgstr ""

#: neutron/extensions/portsecurity.py:26
msgid ""
"Port security must be enabled and port must have an IP address in order "
"to use security groups."
msgstr ""

#: neutron/extensions/portsecurity.py:31
msgid "Port does not have port security binding."
msgstr ""

#: neutron/extensions/providernet.py:59
msgid "Plugin does not support updating provider attributes"
msgstr ""

#: neutron/extensions/quotasv2.py:69
msgid "POST requests are not supported on this resource."
msgstr ""

#: neutron/extensions/quotasv2.py:89
msgid "Only admin is authorized to access quotas for another tenant"
msgstr ""

#: neutron/extensions/quotasv2.py:94
msgid "Only admin can view or configure quota"
msgstr ""

#: neutron/extensions/rbac.py:27
#, python-format
msgid "RBAC policy of type %(object_type)s with ID %(id)s not found"
msgstr ""

#: neutron/extensions/rbac.py:31
#, python-format
msgid ""
"RBAC policy on object %(object_id)s cannot be removed because other "
"objects depend on it.\n"
"Details: %(details)s"
msgstr ""

#: neutron/extensions/rbac.py:39
#, python-format
msgid "'%s' is not a valid RBAC object type"
msgstr ""

#: neutron/extensions/rbac.py:74
msgid ""
"Default number of RBAC entries allowed per tenant. A negative value means"
" unlimited."
msgstr ""

#: neutron/extensions/securitygroup.py:34
msgid "For TCP/UDP protocols, port_range_min must be <= port_range_max"
msgstr ""

#: neutron/extensions/securitygroup.py:39
#, python-format
msgid "Invalid value for port %(port)s"
msgstr ""

#: neutron/extensions/securitygroup.py:43
#, python-format
msgid ""
"Invalid value for ICMP %(field)s (%(attr)s) %(value)s. It must be 0 to "
"255."
msgstr ""

#: neutron/extensions/securitygroup.py:48
#, python-format
msgid ""
"ICMP code (port-range-max) %(value)s is provided but ICMP type (port-"
"range-min) is missing."
msgstr ""

#: neutron/extensions/securitygroup.py:53
#, python-format
msgid "Security Group %(id)s %(reason)s."
msgstr ""

#: neutron/extensions/securitygroup.py:57
#: neutron/extensions/securitygroup.py:119
msgid "in use"
msgstr ""

#: neutron/extensions/securitygroup.py:62
msgid "Insufficient rights for removing default security group."
msgstr ""

#: neutron/extensions/securitygroup.py:66
msgid "Updating default security group not allowed."
msgstr ""

#: neutron/extensions/securitygroup.py:70
msgid "Default security group already exists."
msgstr ""

#: neutron/extensions/securitygroup.py:74
#, python-format
msgid ""
"Security group rule protocol %(protocol)s not supported. Only protocol "
"values %(values)s and integer representations [0 to 255] are supported."
msgstr ""

#: neutron/extensions/securitygroup.py:80
msgid "Multiple tenant_ids in bulk security group rule create not allowed"
msgstr ""

#: neutron/extensions/securitygroup.py:85
msgid "Only remote_ip_prefix or remote_group_id may be provided."
msgstr ""

#: neutron/extensions/securitygroup.py:90
msgid "Must also specifiy protocol if port range is given."
msgstr ""

#: neutron/extensions/securitygroup.py:94
msgid "Only allowed to update rules for one security profile at a time"
msgstr ""

#: neutron/extensions/securitygroup.py:99
#, python-format
msgid "Security group %(id)s does not exist"
msgstr ""

#: neutron/extensions/securitygroup.py:103
#, python-format
msgid "Security group rule %(id)s does not exist"
msgstr ""

#: neutron/extensions/securitygroup.py:107
msgid "Duplicate Security Group Rule in POST."
msgstr ""

#: neutron/extensions/securitygroup.py:111
#, python-format
msgid "Security group rule already exists. Rule id is %(id)s."
msgstr ""

#: neutron/extensions/securitygroup.py:115
#, python-format
msgid "Security Group Rule %(id)s %(reason)s."
msgstr ""

#: neutron/extensions/securitygroup.py:124
#, python-format
msgid "Conflicting value ethertype %(ethertype)s for CIDR %(cidr)s"
msgstr ""

#: neutron/extensions/securitygroup.py:128
#, python-format
msgid "Error %(reason)s while attempting the operation."
msgstr ""

#: neutron/extensions/securitygroup.py:179
#, python-format
msgid "'%s' is not an integer or uuid"
msgstr ""

#: neutron/extensions/securitygroup.py:271
msgid ""
"Number of security groups allowed per tenant. A negative value means "
"unlimited."
msgstr ""

#: neutron/extensions/securitygroup.py:275
msgid ""
"Number of security rules allowed per tenant. A negative value means "
"unlimited."
msgstr ""

#: neutron/extensions/servicetype.py:50
msgid "Neutron Service Type Management"
msgstr ""

#: neutron/extensions/servicetype.py:58
msgid "API for retrieving service providers for Neutron advanced services"
msgstr ""

#: neutron/extensions/vlantransparent.py:28
msgid "Backend does not support VLAN Transparency."
msgstr ""

#: neutron/ipam/exceptions.py:20
#, python-format
msgid "Cannot handle subnet of type %(subnet_type)s"
msgstr ""

#: neutron/ipam/exceptions.py:24
#, python-format
msgid "Unable to calculate %(address_type)s address because of:%(reason)s"
msgstr ""

#: neutron/ipam/exceptions.py:29
#, python-format
msgid "Unknown address type %(address_type)s"
msgstr ""

#: neutron/ipam/exceptions.py:33
#, python-format
msgid "Unable to find IP address %(ip_address)s on subnet %(subnet_id)s"
msgstr ""

#: neutron/ipam/exceptions.py:38
#, python-format
msgid "IP address %(ip)s already allocated in subnet %(subnet_id)s"
msgstr ""

#: neutron/ipam/exceptions.py:42
#, python-format
msgid "IP address %(ip)s does not belong to subnet %(subnet_id)s"
msgstr ""

#: neutron/ipam/exceptions.py:46
#, python-format
msgid "The address allocation request could not be satisfied because: %(reason)s"
msgstr ""

#: neutron/ipam/exceptions.py:51
#, python-format
msgid "The subnet request could not be satisfied because: %(reason)s"
msgstr ""

#: neutron/ipam/exceptions.py:56
#, python-format
msgid ""
"IPv6 address %(ip)s cannot be directly assigned to a port on subnet "
"%(subnet_id)s as the subnet is configured for automatic addresses"
msgstr ""

#: neutron/ipam/exceptions.py:62
#, python-format
msgid "No more IP addresses available for subnet %(subnet_id)s."
msgstr ""

#: neutron/ipam/subnet_alloc.py:134
#, python-format
msgid "Insufficient prefix space to allocate subnet size /%s"
msgstr ""

#: neutron/ipam/subnet_alloc.py:152
msgid "Cannot allocate requested subnet from the available set of prefixes"
msgstr ""

#: neutron/ipam/subnet_alloc.py:173
msgid "Unsupported request type"
msgstr ""

#: neutron/objects/base.py:25
#, python-format
msgid "Unable to update the following object fields: %(fields)s"
msgstr ""

#: neutron/objects/base.py:29
#, python-format
msgid ""
"Failed to create a duplicate %(object_type)s: for attribute(s) "
"%(attributes)s with value(s) %(values)s"
msgstr ""

#: neutron/objects/base.py:78
#, python-format
msgid "'%s' is not supported for filtering"
msgstr ""

#: neutron/pecan_wsgi/hooks/translation.py:36
#, python-format
msgid "An unexpected exception was caught: %s"
msgstr ""

#: neutron/pecan_wsgi/hooks/translation.py:38
msgid "An unexpected internal error occured."
msgstr ""

#: neutron/plugins/brocade/NeutronPlugin.py:61
#: neutron/plugins/ml2/drivers/brocade/mechanism_brocade.py:22
#: neutron/services/l3_router/brocade/l3_router_plugin.py:23
msgid "The address of the host to SSH to"
msgstr ""

#: neutron/plugins/brocade/NeutronPlugin.py:63
#: neutron/plugins/ml2/drivers/brocade/mechanism_brocade.py:24
#: neutron/services/l3_router/brocade/l3_router_plugin.py:25
msgid "The SSH username to use"
msgstr ""

#: neutron/plugins/brocade/NeutronPlugin.py:65
#: neutron/plugins/ml2/drivers/brocade/mechanism_brocade.py:26
#: neutron/services/l3_router/brocade/l3_router_plugin.py:27
msgid "The SSH password to use"
msgstr ""

#: neutron/plugins/brocade/NeutronPlugin.py:67
msgid "Currently unused"
msgstr ""

#: neutron/plugins/brocade/NeutronPlugin.py:71
msgid "The network interface to use when creating a port"
msgstr ""

#: neutron/plugins/brocade/NeutronPlugin.py:299
#: neutron/plugins/brocade/NeutronPlugin.py:340
#: neutron/plugins/brocade/NeutronPlugin.py:393
#: neutron/plugins/brocade/NeutronPlugin.py:424
msgid "Brocade plugin raised exception, check logs"
msgstr ""

#: neutron/plugins/common/utils.py:52
#, python-format
msgid "%(id)s is not a valid %(type)s identifier"
msgstr ""

#: neutron/plugins/common/utils.py:57
msgid "End of tunnel range is less than start of tunnel range"
msgstr ""

#: neutron/plugins/common/utils.py:67
#, python-format
msgid "%s is not a valid VLAN tag"
msgstr ""

#: neutron/plugins/common/utils.py:71
msgid "End of VLAN range is less than start of VLAN range"
msgstr ""

#: neutron/plugins/embrane/common/config.py:21
msgid "ESM management root address"
msgstr ""

#: neutron/plugins/embrane/common/config.py:23
msgid "ESM admin username."
msgstr ""

#: neutron/plugins/embrane/common/config.py:26
msgid "ESM admin password."
msgstr ""

#: neutron/plugins/embrane/common/config.py:28
msgid "Router image id (Embrane FW/VPN)"
msgstr ""

#: neutron/plugins/embrane/common/config.py:30
msgid "In band Security Zone id"
msgstr ""

#: neutron/plugins/embrane/common/config.py:32
msgid "Out of band Security Zone id"
msgstr ""

#: neutron/plugins/embrane/common/config.py:34
msgid "Management Security Zone id"
msgstr ""

#: neutron/plugins/embrane/common/config.py:36
msgid "Dummy user traffic Security Zone id"
msgstr ""

#: neutron/plugins/embrane/common/config.py:38
msgid "Shared resource pool id"
msgstr ""

#: neutron/plugins/embrane/common/config.py:40
msgid "Define if the requests have run asynchronously or not"
msgstr ""

#: neutron/plugins/embrane/common/constants.py:47
#, python-format
msgid "Dva is pending for the following reason: %s"
msgstr ""

#: neutron/plugins/embrane/common/constants.py:48
msgid ""
"Dva can't be found to execute the operation, probably was cancelled "
"through the heleos UI"
msgstr ""

#: neutron/plugins/embrane/common/constants.py:50
#, python-format
msgid "Dva seems to be broken for reason %s"
msgstr ""

#: neutron/plugins/embrane/common/constants.py:51
#, python-format
msgid "Dva interface seems to be broken for reason %s"
msgstr ""

#: neutron/plugins/embrane/common/constants.py:53
#, python-format
msgid "Dva creation failed reason %s"
msgstr ""

#: neutron/plugins/embrane/common/constants.py:54
#, python-format
msgid "Dva creation is in pending state for reason %s"
msgstr ""

#: neutron/plugins/embrane/common/constants.py:56
#, python-format
msgid "Dva configuration failed for reason %s"
msgstr ""

#: neutron/plugins/embrane/common/constants.py:57
#, python-format
msgid ""
"Failed to delete the backend router for reason %s. Please remove it "
"manually through the heleos UI"
msgstr ""

#: neutron/plugins/embrane/common/exceptions.py:20
#, python-format
msgid "An unexpected error occurred:%(err_msg)s"
msgstr ""

#: neutron/plugins/embrane/common/exceptions.py:24
#, python-format
msgid "%(err_msg)s"
msgstr ""

#: neutron/plugins/embrane/l2base/support_exceptions.py:20
#, python-format
msgid "Cannot retrieve utif info for the following reason: %(err_msg)s"
msgstr ""

#: neutron/plugins/embrane/l2base/ml2/ml2_support.py:43
#, python-format
msgid ""
"Network type %s not supported. Please be sure that tenant_network_type is"
" vlan"
msgstr ""

#: neutron/plugins/hyperv/agent/config.py:23
msgid ""
"List of <physical_network>:<vswitch> where the physical networks can be "
"expressed with wildcards, e.g.: .\"*:external\""
msgstr ""

#: neutron/plugins/hyperv/agent/config.py:29
msgid "Private vswitch name used for local networks"
msgstr ""

#: neutron/plugins/hyperv/agent/config.py:31
#: neutron/plugins/ml2/drivers/linuxbridge/agent/common/config.py:58
#: neutron/plugins/ml2/drivers/mech_sriov/agent/common/config.py:58
#: neutron/plugins/ml2/drivers/mlnx/agent/config.py:43
#: neutron/plugins/ml2/drivers/openvswitch/agent/common/config.py:74
#: neutron/plugins/oneconvergence/lib/config.py:45
msgid ""
"The number of seconds the agent will wait between polling for local "
"device changes."
msgstr ""

#: neutron/plugins/hyperv/agent/config.py:35
msgid ""
"Enables metrics collections for switch ports by using Hyper-V's metric "
"APIs. Collected data can by retrieved by other apps and services, e.g.: "
"Ceilometer. Requires Hyper-V / Windows Server 2012 and above"
msgstr ""

#: neutron/plugins/hyperv/agent/config.py:42
msgid ""
"Specifies the maximum number of retries to enable Hyper-V's port metrics "
"collection. The agent will try to enable the feature once every "
"polling_interval period for at most metrics_max_retries or until it "
"succeedes."
msgstr ""

#: neutron/plugins/midonet/plugin.py:23
msgid "MidoNet API server URI."
msgstr ""

#: neutron/plugins/midonet/plugin.py:25
msgid "MidoNet admin username."
msgstr ""

#: neutron/plugins/midonet/plugin.py:28
msgid "MidoNet admin password."
msgstr ""

#: neutron/plugins/midonet/plugin.py:31
msgid "ID of the project that MidoNet admin user belongs to."
msgstr ""

#: neutron/plugins/ml2/config.py:22
msgid ""
"List of network type driver entrypoints to be loaded from the "
"neutron.ml2.type_drivers namespace."
msgstr ""

#: neutron/plugins/ml2/config.py:26
msgid "Ordered list of network_types to allocate as tenant networks."
msgstr ""

#: neutron/plugins/ml2/config.py:30
msgid ""
"An ordered list of networking mechanism driver entrypoints to be loaded "
"from the neutron.ml2.mechanism_drivers namespace."
msgstr ""

#: neutron/plugins/ml2/config.py:35
msgid ""
"An ordered list of extension driver entrypoints to be loaded from the "
"neutron.ml2.extension_drivers namespace."
msgstr ""

#: neutron/plugins/ml2/config.py:39
msgid ""
"The maximum permissible size of an unfragmented packet travelling from "
"and to addresses where encapsulated Neutron traffic is sent.  If <= 0, "
"the path MTU is indeterminate."
msgstr ""

#: neutron/plugins/ml2/config.py:44
msgid ""
"The maximum permissible size of an unfragmented packet travelling a L2 "
"network segment.  If <= 0, the segment MTU is indeterminate."
msgstr ""

#: neutron/plugins/ml2/config.py:49
msgid ""
"A list of mappings of physical networks to MTU values. The format of the "
"mapping is <physnet>:<mtu val>. This mapping allows specifying a physical"
" network MTU value that differs from the default segment_mtu value."
msgstr ""

#: neutron/plugins/ml2/config.py:55
msgid ""
"Default network type for external networks when no provider attributes "
"are specified. By default it is None, which means that if provider "
"attributes are not specified while creating external networks then they "
"will have the same type as tenant networks. Allowed values for "
"external_network_type config option depend on the network type values "
"configured in type_drivers config option."
msgstr ""

#: neutron/plugins/ml2/managers.py:101
msgid "network_type required"
msgstr ""

#: neutron/plugins/ml2/managers.py:208 neutron/plugins/ml2/managers.py:217
#, python-format
msgid "network_type value '%s' not supported"
msgstr ""

#: neutron/plugins/ml2/plugin.py:250
msgid "binding:profile value too large"
msgstr ""

#: neutron/plugins/ml2/common/exceptions.py:23
#, python-format
msgid "%(method)s failed."
msgstr ""

#: neutron/plugins/ml2/common/exceptions.py:28
#, python-format
msgid "Extension %(driver)s failed."
msgstr ""

#: neutron/plugins/ml2/drivers/type_flat.py:34
msgid ""
"List of physical_network names with which flat networks can be created. "
"Use * to allow flat networks with arbitrary physical_network names."
msgstr ""

#: neutron/plugins/ml2/drivers/type_flat.py:76
msgid "physical network name is empty"
msgstr ""

#: neutron/plugins/ml2/drivers/type_flat.py:94
msgid "physical_network required for flat provider network"
msgstr ""

#: neutron/plugins/ml2/drivers/type_flat.py:97
#, python-format
msgid "physical_network '%s' unknown for flat provider network"
msgstr ""

#: neutron/plugins/ml2/drivers/type_flat.py:104
#, python-format
msgid "%s prohibited for flat provider network"
msgstr ""

#: neutron/plugins/ml2/drivers/type_geneve.py:32
msgid ""
"Comma-separated list of <vni_min>:<vni_max> tuples enumerating ranges of "
"Geneve VNI IDs that are available for tenant network allocation"
msgstr ""

#: neutron/plugins/ml2/drivers/type_geneve.py:37
msgid ""
"Geneve encapsulation header size is dynamic, this value is used to "
"calculate the maximum MTU for the driver.this is the sum of the sizes of "
"the outer ETH + IP + UDP + GENEVE header sizes"
msgstr ""

#: neutron/plugins/ml2/drivers/type_gre.py:32
msgid ""
"Comma-separated list of <tun_min>:<tun_max> tuples enumerating ranges of "
"GRE tunnel IDs that are available for tenant network allocation"
msgstr ""

#: neutron/plugins/ml2/drivers/type_local.py:52
#, python-format
msgid "%s prohibited for local provider network"
msgstr ""

#: neutron/plugins/ml2/drivers/type_tunnel.py:181
#, python-format
msgid "provider:physical_network specified for %s network"
msgstr ""

#: neutron/plugins/ml2/drivers/type_tunnel.py:188
#, python-format
msgid "%(key)s prohibited for %(tunnel)s provider network"
msgstr ""

#: neutron/plugins/ml2/drivers/type_tunnel.py:322
msgid "Tunnel IP value needed by the ML2 plugin"
msgstr ""

#: neutron/plugins/ml2/drivers/type_tunnel.py:327
msgid "Network type value needed by the ML2 plugin"
msgstr ""

#: neutron/plugins/ml2/drivers/type_tunnel.py:384
#, python-format
msgid "Network type value '%s' not supported"
msgstr ""

#: neutron/plugins/ml2/drivers/type_vlan.py:37
msgid ""
"List of <physical_network>:<vlan_min>:<vlan_max> or <physical_network> "
"specifying physical_network names usable for VLAN provider and tenant "
"networks, as well as ranges of VLAN tags on each available for allocation"
" to tenant networks."
msgstr ""

#: neutron/plugins/ml2/drivers/type_vlan.py:174
#, python-format
msgid "physical_network '%s' unknown  for VLAN provider network"
msgstr ""

#: neutron/plugins/ml2/drivers/type_vlan.py:179
#, python-format
msgid "segmentation_id out of range (%(min)s through %(max)s)"
msgstr ""

#: neutron/plugins/ml2/drivers/type_vlan.py:185
msgid "segmentation_id requires physical_network for VLAN provider network"
msgstr ""

#: neutron/plugins/ml2/drivers/type_vlan.py:193
#, python-format
msgid "%s prohibited for VLAN provider network"
msgstr ""

#: neutron/plugins/ml2/drivers/type_vxlan.py:32
msgid ""
"Comma-separated list of <vni_min>:<vni_max> tuples enumerating ranges of "
"VXLAN VNI IDs that are available for tenant network allocation"
msgstr ""

#: neutron/plugins/ml2/drivers/type_vxlan.py:36
msgid "Multicast group for VXLAN. If unset, disables VXLAN multicast mode."
msgstr ""

#: neutron/plugins/ml2/drivers/brocade/mechanism_brocade.py:28
msgid "Allowed physical networks"
msgstr ""

#: neutron/plugins/ml2/drivers/brocade/mechanism_brocade.py:30
msgid "OS Type of the switch"
msgstr ""

#: neutron/plugins/ml2/drivers/brocade/mechanism_brocade.py:32
msgid "OS Version number"
msgstr ""

#: neutron/plugins/ml2/drivers/freescale/config.py:28
msgid "CRD service Username."
msgstr ""

#: neutron/plugins/ml2/drivers/freescale/config.py:31
msgid "CRD Service Password."
msgstr ""

#: neutron/plugins/ml2/drivers/freescale/config.py:33
msgid "CRD Tenant Name."
msgstr ""

#: neutron/plugins/ml2/drivers/freescale/config.py:36
msgid "CRD Auth URL."
msgstr ""

#: neutron/plugins/ml2/drivers/freescale/config.py:39
msgid "URL for connecting to CRD service."
msgstr ""

#: neutron/plugins/ml2/drivers/freescale/config.py:42
msgid "Timeout value for connecting to CRD service in seconds."
msgstr ""

#: neutron/plugins/ml2/drivers/freescale/config.py:46
msgid "Region name for connecting to CRD Service in admin context."
msgstr ""

#: neutron/plugins/ml2/drivers/freescale/config.py:50
msgid "If set, ignore any SSL validation issues."
msgstr ""

#: neutron/plugins/ml2/drivers/freescale/config.py:53
msgid "Auth strategy for connecting to neutron in admin context."
msgstr ""

#: neutron/plugins/ml2/drivers/freescale/config.py:56
msgid "Location of ca certificates file to use for CRD client requests."
msgstr ""

#: neutron/plugins/ml2/drivers/l2pop/config.py:21
msgid ""
"Delay within which agent is expected to update existing ports whent it "
"restarts"
msgstr ""

#: neutron/plugins/ml2/drivers/linuxbridge/agent/common/config.py:26
msgid ""
"Enable VXLAN on the agent. Can be enabled when agent is managed by ml2 "
"plugin using linuxbridge mechanism driver"
msgstr ""

#: neutron/plugins/ml2/drivers/linuxbridge/agent/common/config.py:30
msgid "TTL for vxlan interface protocol packets."
msgstr ""

#: neutron/plugins/ml2/drivers/linuxbridge/agent/common/config.py:32
msgid "TOS for vxlan interface protocol packets."
msgstr ""

#: neutron/plugins/ml2/drivers/linuxbridge/agent/common/config.py:34
msgid ""
"Multicast group(s) for vxlan interface. A range of group addresses may be"
" specified by using CIDR notation. To reserve a unique group for each "
"possible (24-bit) VNI, use a /8 such as 239.0.0.0/8. This setting must be"
" the same on all the agents."
msgstr ""

#: neutron/plugins/ml2/drivers/linuxbridge/agent/common/config.py:40
msgid "Local IP address of the VXLAN endpoints."
msgstr ""

#: neutron/plugins/ml2/drivers/linuxbridge/agent/common/config.py:42
msgid ""
"Extension to use alongside ml2 plugin's l2population mechanism driver. It"
" enables the plugin to populate VXLAN forwarding table."
msgstr ""

#: neutron/plugins/ml2/drivers/linuxbridge/agent/common/config.py:50
#: neutron/plugins/ml2/drivers/mlnx/agent/config.py:25
msgid "List of <physical_network>:<physical_interface>"
msgstr ""

#: neutron/plugins/ml2/drivers/linuxbridge/agent/common/config.py:53
msgid "List of <physical_network>:<physical_bridge>"
msgstr ""

#: neutron/plugins/ml2/drivers/linuxbridge/agent/common/config.py:61
#: neutron/plugins/ml2/drivers/openvswitch/agent/common/config.py:118
msgid ""
"Set new timeout in seconds for new rpc calls after agent receives "
"SIGTERM. If value is set to 0, rpc timeout won't be changed"
msgstr ""

#: neutron/plugins/ml2/drivers/linuxbridge/agent/common/config.py:69
#: neutron/plugins/ml2/drivers/openvswitch/agent/common/config.py:101
msgid ""
"Enable suppression of ARP responses that don't match an IP address that "
"belongs to the port from which they originate. Note: This prevents the "
"VMs attached to this agent from spoofing, it doesn't protect them from "
"other devices which have the capability to spoof (e.g. bare metal or VMs "
"attached to agents without this flag set to True). Spoofing rules will "
"not be added to any ports that have port security disabled. For "
"LinuxBridge, this requires ebtables. For OVS, it requires a version that "
"supports matching ARP headers."
msgstr ""

#: neutron/plugins/ml2/drivers/mech_sriov/agent/eswitch_manager.py:53
msgid "Device not found"
msgstr ""

#: neutron/plugins/ml2/drivers/mech_sriov/agent/eswitch_manager.py:67
msgid "Device has no virtual functions"
msgstr ""

#: neutron/plugins/ml2/drivers/mech_sriov/agent/sriov_nic_agent.py:380
#, python-format
msgid "Device name %(dev_name)s is missing from physical_device_mappings"
msgstr ""

#: neutron/plugins/ml2/drivers/mech_sriov/agent/common/config.py:41
#, python-format
msgid "Device %(dev_name)s in mapping: %(mapping)s not unique"
msgstr ""

#: neutron/plugins/ml2/drivers/mech_sriov/agent/common/config.py:65
msgid ""
"List of <physical_network>:<network_device> mapping physical network "
"names to the agent's node-specific physical network device of SR-IOV "
"physical function to be used for VLAN networks. All physical networks "
"listed in network_vlan_ranges on the server should have mappings to "
"appropriate interfaces on each agent"
msgstr ""

#: neutron/plugins/ml2/drivers/mech_sriov/agent/common/config.py:74
msgid ""
"List of <network_device>:<excluded_devices> mapping network_device to the"
" agent's node-specific list of virtual functions that should not be used "
"for virtual networking. excluded_devices is a semicolon separated list of"
" virtual functions (BDF format).to exclude from network_device. The "
"network_device in the mapping should appear in the "
"physical_device_mappings list."
msgstr ""

#: neutron/plugins/ml2/drivers/mech_sriov/agent/common/exceptions.py:24
#, python-format
msgid "Invalid Device %(dev_name)s: %(reason)s"
msgstr ""

#: neutron/plugins/ml2/drivers/mech_sriov/agent/common/exceptions.py:28
#, python-format
msgid "ip command failed on device %(dev_name)s: %(reason)s"
msgstr ""

#: neutron/plugins/ml2/drivers/mech_sriov/agent/common/exceptions.py:32
#, python-format
msgid "Operation not supported on device %(dev_name)s"
msgstr ""

#: neutron/plugins/ml2/drivers/mech_sriov/agent/common/exceptions.py:36
#, python-format
msgid "Invalid pci slot %(pci_slot)s"
msgstr ""

#: neutron/plugins/ml2/drivers/mech_sriov/mech_driver/exceptions.py:23
#, python-format
msgid "Unsupported network type %(net_type)s."
msgstr ""

#: neutron/plugins/ml2/drivers/mech_sriov/mech_driver/mech_driver.py:37
msgid ""
"Supported PCI vendor devices, defined by vendor_id:product_id according "
"to the PCI ID Repository. Default enables support for Intel and Mellanox "
"SR-IOV capable NICs"
msgstr ""

#: neutron/plugins/ml2/drivers/mech_sriov/mech_driver/mech_driver.py:43
msgid ""
"SRIOV neutron agent is required for port binding. DEPRECATED: This option"
" is deprecated in the Liberty release and will be removed in the Mitaka "
"release. From Mitaka the agent will always be required."
msgstr ""

#: neutron/plugins/ml2/drivers/mech_sriov/mech_driver/mech_driver.py:99
msgid "Parsing supported pci_vendor_devs failed"
msgstr ""

#: neutron/plugins/ml2/drivers/mech_sriov/mech_driver/mech_driver.py:196
#, python-format
msgid "Incorrect pci_vendor_info: \"%s\", should be pair vendor_id:product_id"
msgstr ""

#: neutron/plugins/ml2/drivers/mlnx/agent/config.py:28
msgid "eswitch daemon end point"
msgstr ""

#: neutron/plugins/ml2/drivers/mlnx/agent/config.py:30
msgid ""
"The number of milliseconds the agent will wait for response on request to"
" daemon."
msgstr ""

#: neutron/plugins/ml2/drivers/mlnx/agent/config.py:33
msgid ""
"The number of retries the agent will send request to daemon before giving"
" up"
msgstr ""

#: neutron/plugins/ml2/drivers/mlnx/agent/config.py:36
msgid ""
"backoff rate multiplier for waiting period between retries for request to"
" daemon, i.e. value of 2 will  double the request timeout each retry"
msgstr ""

#: neutron/plugins/ml2/drivers/opendaylight/driver.py:27
msgid "HTTP URL of OpenDaylight REST interface."
msgstr ""

#: neutron/plugins/ml2/drivers/opendaylight/driver.py:29
msgid "HTTP username for authentication"
msgstr ""

#: neutron/plugins/ml2/drivers/opendaylight/driver.py:31
msgid "HTTP password for authentication"
msgstr ""

#: neutron/plugins/ml2/drivers/opendaylight/driver.py:33
msgid "HTTP timeout in seconds."
msgstr ""

#: neutron/plugins/ml2/drivers/opendaylight/driver.py:35
msgid "Tomcat session timeout in minutes."
msgstr ""

#: neutron/plugins/ml2/drivers/openvswitch/agent/ovs_neutron_agent.py:72
#, python-format
msgid "Unable to retrieve port details for devices: %(devices)s "
msgstr ""

#: neutron/plugins/ml2/drivers/openvswitch/agent/ovs_neutron_agent.py:1825
msgid ""
"DVR deployments for VXLAN/GRE/Geneve underlays require L2-pop to be "
"enabled, in both the Agent and Server side."
msgstr ""

#: neutron/plugins/ml2/drivers/openvswitch/agent/ovs_neutron_agent.py:1839
#, python-format
msgid "Parsing bridge_mappings failed: %s."
msgstr ""

#: neutron/plugins/ml2/drivers/openvswitch/agent/ovs_neutron_agent.py:1861
#, python-format
msgid "Invalid tunnel type specified: %s"
msgstr ""

#: neutron/plugins/ml2/drivers/openvswitch/agent/ovs_neutron_agent.py:1864
msgid "Tunneling cannot be enabled without a valid local_ip."
msgstr ""

#: neutron/plugins/ml2/drivers/openvswitch/agent/common/config.py:31
msgid "Integration bridge to use."
msgstr ""

#: neutron/plugins/ml2/drivers/openvswitch/agent/common/config.py:33
msgid "Tunnel bridge to use."
msgstr ""

#: neutron/plugins/ml2/drivers/openvswitch/agent/common/config.py:35
msgid "Peer patch port in integration bridge for tunnel bridge."
msgstr ""

#: neutron/plugins/ml2/drivers/openvswitch/agent/common/config.py:38
msgid "Peer patch port in tunnel bridge for integration bridge."
msgstr ""

#: neutron/plugins/ml2/drivers/openvswitch/agent/common/config.py:41
msgid "Local IP address of tunnel endpoint."
msgstr ""

#: neutron/plugins/ml2/drivers/openvswitch/agent/common/config.py:44
msgid "List of <physical_network>:<bridge>. Deprecated for ofagent."
msgstr ""

#: neutron/plugins/ml2/drivers/openvswitch/agent/common/config.py:47
msgid ""
"Use veths instead of patch ports to interconnect the integration bridge "
"to physical bridges."
msgstr ""

#: neutron/plugins/ml2/drivers/openvswitch/agent/common/config.py:51
msgid "OpenFlow interface to use."
msgstr ""

#: neutron/plugins/ml2/drivers/openvswitch/agent/common/config.py:55
msgid "OVS datapath to use."
msgstr ""

#: neutron/plugins/ml2/drivers/openvswitch/agent/common/config.py:57
msgid ""
"Address to listen on for OpenFlow connections. Used only for 'native' "
"driver."
msgstr ""

#: neutron/plugins/ml2/drivers/openvswitch/agent/common/config.py:60
msgid "Port to listen on for OpenFlow connections. Used only for 'native' driver."
msgstr ""

#: neutron/plugins/ml2/drivers/openvswitch/agent/common/config.py:63
msgid ""
"Timeout in seconds to wait for the local switch connecting the "
"controller. Used only for 'native' driver."
msgstr ""

#: neutron/plugins/ml2/drivers/openvswitch/agent/common/config.py:67
msgid ""
"Timeout in seconds to wait for a single OpenFlow request. Used only for "
"'native' driver."
msgstr ""

#: neutron/plugins/ml2/drivers/openvswitch/agent/common/config.py:78
msgid "Minimize polling by monitoring ovsdb for interface changes."
msgstr ""

#: neutron/plugins/ml2/drivers/openvswitch/agent/common/config.py:82
msgid ""
"The number of seconds to wait before respawning the ovsdb monitor after "
"losing communication with it."
msgstr ""

#: neutron/plugins/ml2/drivers/openvswitch/agent/common/config.py:85
msgid "Network types supported by the agent (gre and/or vxlan)."
msgstr ""

#: neutron/plugins/ml2/drivers/openvswitch/agent/common/config.py:88
msgid "The UDP port to use for VXLAN tunnels."
msgstr ""

#: neutron/plugins/ml2/drivers/openvswitch/agent/common/config.py:90
msgid "MTU size of veth interfaces"
msgstr ""

#: neutron/plugins/ml2/drivers/openvswitch/agent/common/config.py:92
msgid ""
"Use ML2 l2population mechanism driver to learn remote MAC and IPs and "
"improve tunnel scalability."
msgstr ""

#: neutron/plugins/ml2/drivers/openvswitch/agent/common/config.py:95
msgid ""
"Enable local ARP responder if it is supported. Requires OVS 2.1 and ML2 "
"l2population driver. Allows the switch (when supporting an overlay) to "
"respond to an ARP request locally without performing a costly ARP "
"broadcast into the overlay."
msgstr ""

#: neutron/plugins/ml2/drivers/openvswitch/agent/common/config.py:113
msgid ""
"Set or un-set the don't fragment (DF) bit on outgoing IP packet carrying "
"GRE/VXLAN tunnel."
msgstr ""

#: neutron/plugins/ml2/drivers/openvswitch/agent/common/config.py:116
msgid "Make the l2 agent run in DVR mode."
msgstr ""

#: neutron/plugins/ml2/drivers/openvswitch/agent/common/config.py:122
msgid ""
"Reset flow table on start. Setting this to True will cause brief traffic "
"interruption."
msgstr ""

#: neutron/plugins/ml2/drivers/openvswitch/agent/common/config.py:125
msgid ""
"Set or un-set the tunnel header checksum  on outgoing IP packet carrying "
"GRE/VXLAN tunnel."
msgstr ""

#: neutron/plugins/ml2/drivers/openvswitch/agent/common/config.py:129
msgid "Selects the Agent Type reported"
msgstr ""

#: neutron/plugins/oneconvergence/lib/config.py:24
msgid "NVSD Controller IP address"
msgstr ""

#: neutron/plugins/oneconvergence/lib/config.py:27
msgid "NVSD Controller Port number"
msgstr ""

#: neutron/plugins/oneconvergence/lib/config.py:30
msgid "NVSD Controller username"
msgstr ""

#: neutron/plugins/oneconvergence/lib/config.py:33
msgid "NVSD Controller password"
msgstr ""

#: neutron/plugins/oneconvergence/lib/config.py:36
msgid "NVSD controller REST API request timeout in seconds"
msgstr ""

#: neutron/plugins/oneconvergence/lib/config.py:38
msgid "Number of login retries to NVSD controller"
msgstr ""

#: neutron/plugins/oneconvergence/lib/config.py:43
msgid "integration bridge"
msgstr ""

#: neutron/plugins/oneconvergence/lib/exception.py:23
#, python-format
msgid "An unknown nvsd plugin exception occurred: %(reason)s"
msgstr ""

#: neutron/plugins/oneconvergence/lib/exception.py:27
msgid "The request has timed out."
msgstr ""

#: neutron/plugins/oneconvergence/lib/exception.py:31
msgid "Invalid access credentials to the Server."
msgstr ""

#: neutron/plugins/oneconvergence/lib/exception.py:35
#, python-format
msgid "A resource is not found: %(reason)s"
msgstr ""

#: neutron/plugins/oneconvergence/lib/exception.py:39
#, python-format
msgid "Request sent to server is invalid: %(reason)s"
msgstr ""

#: neutron/plugins/oneconvergence/lib/exception.py:43
#, python-format
msgid "Internal Server Error: %(reason)s"
msgstr ""

#: neutron/plugins/oneconvergence/lib/exception.py:47
msgid "Connection is closed by the server."
msgstr ""

#: neutron/plugins/oneconvergence/lib/exception.py:51
#, python-format
msgid "The request is forbidden access to the resource: %(reason)s"
msgstr ""

#: neutron/plugins/oneconvergence/lib/exception.py:55
#, python-format
msgid "Internal Server Error from NVSD controller: %(reason)s"
msgstr ""

#: neutron/plugins/oneconvergence/lib/nvsdlib.py:54
#, python-format
msgid "Could not create a %(resource)s under tenant %(tenant_id)s"
msgstr ""

#: neutron/plugins/oneconvergence/lib/nvsdlib.py:58
#, python-format
msgid "Failed to %(method)s %(resource)s id=%(resource_id)s"
msgstr ""

#: neutron/plugins/oneconvergence/lib/nvsdlib.py:64
#, python-format
msgid "Failed to %(method)s %(resource)s"
msgstr ""

#: neutron/plugins/oneconvergence/lib/plugin_helper.py:80
#, python-format
msgid "Unable to connect to NVSD controller. Exiting after %(retries)s attempts"
msgstr ""

#: neutron/quota/__init__.py:43
msgid ""
"Resource name(s) that are supported in quota features. This option is now"
" deprecated for removal."
msgstr ""

#: neutron/quota/__init__.py:48
msgid ""
"Default number of resource allowed per tenant. A negative value means "
"unlimited."
msgstr ""

#: neutron/quota/__init__.py:52
msgid "Number of networks allowed per tenant. A negative value means unlimited."
msgstr ""

#: neutron/quota/__init__.py:56
msgid "Number of subnets allowed per tenant, A negative value means unlimited."
msgstr ""

#: neutron/quota/__init__.py:60
msgid "Number of ports allowed per tenant. A negative value means unlimited."
msgstr ""

#: neutron/quota/__init__.py:64
msgid "Default driver to use for quota checks"
msgstr ""

#: neutron/quota/__init__.py:67
msgid ""
"Keep in track in the database of current resourcequota usage. Plugins "
"which do not leverage the neutron database should set this flag to False"
msgstr ""

#: neutron/quota/__init__.py:148 neutron/quota/__init__.py:153
msgid "Access to this resource was denied."
msgstr ""

#: neutron/server/__init__.py:31
msgid ""
"ERROR: Unable to find configuration file via the default search paths "
"(~/.neutron/, ~/, /etc/neutron/, /etc/) and the '--config-file' option!"
msgstr ""

#: neutron/server/__init__.py:39
#, python-format
msgid "ERROR: %s"
msgstr ""

#: neutron/services/provider_configuration.py:32
msgid ""
"Defines providers for advanced services using the format: "
"<service_type>:<name>:<driver>[:default]"
msgstr ""

#: neutron/services/provider_configuration.py:138
#, python-format
msgid "Provider name is limited by 255 characters: %s"
msgstr ""

#: neutron/services/provider_configuration.py:151
msgid "Invalid service provider format"
msgstr ""

#: neutron/services/provider_configuration.py:159
#, python-format
msgid "Invalid provider format. Last part should be 'default' or empty: %s"
msgstr ""

#: neutron/services/provider_configuration.py:174
#, python-format
msgid ""
"Service provider '%(provider)s' could not be found for service type "
"%(service_type)s"
msgstr ""

#: neutron/services/provider_configuration.py:179
#, python-format
msgid "Service type %(service_type)s does not have a default service provider"
msgstr ""

#: neutron/services/provider_configuration.py:184
#, python-format
msgid ""
"Resource '%(resource_id)s' is already associated with provider "
"'%(provider)s' for service type '%(service_type)s'"
msgstr ""

#: neutron/services/provider_configuration.py:198
#, python-format
msgid "Driver %s is not unique across providers"
msgstr ""

#: neutron/services/provider_configuration.py:208
#, python-format
msgid "Multiple default providers for service %s"
msgstr ""

#: neutron/services/provider_configuration.py:219
#, python-format
msgid "Multiple providers specified for service %s"
msgstr ""

#: neutron/services/service_base.py:66
#, python-format
msgid "No providers specified for '%s' service, exiting"
msgstr ""

#: neutron/services/firewall/agents/firewall_agent_api.py:28
msgid "Name of the FWaaS Driver"
msgstr ""

#: neutron/services/firewall/agents/firewall_agent_api.py:32
msgid "Enable FWaaS"
msgstr ""

#: neutron/services/firewall/agents/l3reference/firewall_l3_agent.py:68
msgid ""
"FWaaS plugin is configured in the server side, but FWaaS is disabled in "
"L3-agent."
msgstr ""

#: neutron/services/firewall/agents/l3reference/firewall_l3_agent.py:80
#, python-format
msgid "Error importing FWaaS device driver: %s"
msgstr ""

#: neutron/services/l3_router/l3_sdnve.py:69
msgid "admin_state_up=False routers are not supported."
msgstr ""

#: neutron/services/l3_router/l3_sdnve.py:128
msgid "No port ID"
msgstr ""

#: neutron/services/l3_router/l3_sdnve.py:134
msgid "No fixed IP"
msgstr ""

#: neutron/services/l3_router/brocade/l3_router_plugin.py:29
msgid "Rbridge id of provider edge router(s)"
msgstr ""

#: neutron/services/l3_router/brocade/vyatta/vrouter_neutron_plugin.py:22
msgid "Name of tenant admin user."
msgstr ""

#: neutron/services/l3_router/brocade/vyatta/vrouter_neutron_plugin.py:24
msgid "Tenant admin password."
msgstr ""

#: neutron/services/l3_router/brocade/vyatta/vrouter_neutron_plugin.py:26
msgid "UUID of tenant that holds Vyatta vRouter instances."
msgstr ""

#: neutron/services/l3_router/brocade/vyatta/vrouter_neutron_plugin.py:28
msgid "Nova image id for instances of Vyatta vRouter."
msgstr ""

#: neutron/services/l3_router/brocade/vyatta/vrouter_neutron_plugin.py:30
msgid "Nova VM flavor for instances of Vyatta vRouter."
msgstr ""

#: neutron/services/l3_router/brocade/vyatta/vrouter_neutron_plugin.py:32
msgid "Vyatta vRouter management network id."
msgstr ""

#: neutron/services/l3_router/brocade/vyatta/vrouter_neutron_plugin.py:34
msgid "Vyatta vRouter login credentials"
msgstr ""

#: neutron/services/l3_router/brocade/vyatta/vrouter_neutron_plugin.py:36
msgid ""
"Number of seconds between consecutive Nova queries when waiting for "
"router instance status change."
msgstr ""

#: neutron/services/l3_router/brocade/vyatta/vrouter_neutron_plugin.py:39
msgid ""
"Number of seconds to wait for Nova to activate instance before setting "
"resource to error state."
msgstr ""

#: neutron/services/l3_router/brocade/vyatta/vrouter_neutron_plugin.py:42
msgid ""
"Number of seconds between consecutive Vyatta vRouter queries when waiting"
" for router instance boot."
msgstr ""

#: neutron/services/l3_router/brocade/vyatta/vrouter_neutron_plugin.py:45
msgid ""
"Number of seconds to wait for Vyatta vRouter to boot before setting "
"resource to error state."
msgstr ""

#: neutron/services/l3_router/brocade/vyatta/vrouter_neutron_plugin.py:47
msgid "Keystone URL."
msgstr ""

#: neutron/services/metering/agents/metering_agent.py:69
msgid "Metering driver"
msgstr ""

#: neutron/services/metering/agents/metering_agent.py:71
msgid "Interval between two metering measures"
msgstr ""

#: neutron/services/metering/agents/metering_agent.py:73
msgid "Interval between two metering reports"
msgstr ""

#: neutron/services/metering/agents/metering_agent.py:97
msgid "A metering driver must be specified"
msgstr ""

#: neutron/services/metering/drivers/iptables/iptables_driver.py:88
msgid "An interface driver must be specified"
msgstr ""

#: neutron/services/qos/notification_drivers/manager.py:22
msgid "Drivers list to use to send the update notification"
msgstr ""

#: neutron/services/qos/notification_drivers/manager.py:54
msgid "A QoS driver must be specified"
msgstr ""

#: neutron/tests/base.py:121
#, python-format
msgid "Unknown attribute '%s'."
msgstr ""

#: neutron/tests/common/agents/l3_agent.py:64
msgid "Suffix to append to all namespace names."
msgstr ""

#: neutron/tests/functional/agent/linux/simple_daemon.py:37
msgid ""
"uuid provided from the command line so external_process can track us via "
"/proc/cmdline interface."
msgstr ""

#: neutron/tests/functional/agent/linux/test_async_process.py:77
msgid "Async process didn't respawn"
msgstr ""

#: neutron/tests/functional/agent/linux/test_keepalived.py:64
msgid "Keepalived didn't spawn"
msgstr ""

#: neutron/tests/functional/agent/linux/test_keepalived.py:73
msgid "Keepalived didn't respawn"
msgstr ""

#: neutron/tests/unit/agent/linux/test_iptables_manager.py:846
#: neutron/tests/unit/agent/linux/test_iptables_manager.py:880
#, python-format
msgid ""
"IPTablesManager.apply failed to apply the following set of iptables "
"rules:\n"
"%s"
msgstr ""

#: neutron/tests/unit/api/v2/test_resource.py:157
#: neutron/tests/unit/api/v2/test_resource.py:202
msgid "Unmapped error"
msgstr ""

#: neutron/tests/unit/api/v2/test_resource.py:261
msgid ""
"The server has either erred or is incapable of performing the requested "
"operation."
msgstr ""

#: neutron/tests/unit/plugins/ml2/test_plugin.py:493
#, python-format
msgid "Deleting port %s"
msgstr ""

#: neutron/tests/unit/plugins/ml2/test_plugin.py:494
#, python-format
msgid "The port '%s' was deleted"
msgstr ""

#: neutron/tests/unit/plugins/ml2/drivers/mechanism_logger.py:33
#, python-format
msgid ""
"%(method)s called with network settings %(current)s (original settings "
"%(original)s) and network segments %(segments)s"
msgstr ""

#: neutron/tests/unit/plugins/ml2/drivers/mechanism_logger.py:60
#, python-format
msgid ""
"%(method)s called with subnet settings %(current)s (original settings "
"%(original)s)"
msgstr ""

#: neutron/tests/unit/plugins/ml2/drivers/mechanism_logger.py:86
#, python-format
msgid ""
"%(method)s called with port settings %(current)s (original settings "
"%(original)s) host %(host)s (original host %(original_host)s) vif type "
"%(vif_type)s (original vif type %(original_vif_type)s) vif details "
"%(vif_details)s (original vif details %(original_vif_details)s) binding "
"levels %(levels)s (original binding levels %(original_levels)s) on "
"network %(network)s with segments to bind %(segments_to_bind)s"
msgstr ""

#: neutron/tests/unit/plugins/ml2/drivers/openvswitch/agent/test_ovs_neutron_agent.py:1217
#: neutron/tests/unit/plugins/ml2/drivers/openvswitch/agent/test_ovs_neutron_agent.py:1236
#: neutron/tests/unit/plugins/ml2/drivers/openvswitch/agent/test_ovs_neutron_agent.py:1255
#, python-format
msgid "Failed to set-up %(type)s tunnel port to %(ip)s"
msgstr ""

#: neutron/tests/unit/plugins/ml2/extensions/fake_extension.py:54
msgid "Adds test attributes to core resources."
msgstr ""

