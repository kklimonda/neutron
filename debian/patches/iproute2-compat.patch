From 1ad4cc6629fa7463a3493be4bad6eee43f3b3dd7 Mon Sep 17 00:00:00 2001
From: James Page <james.page@ubuntu.com>
Date: Fri, 18 Sep 2015 16:38:47 +0100
Subject: [PATCH] Add compatibility with iproute2 >= 4.0

The ip netns list command adds additional id data in more recent
versions of iproute2 of the format:

  qdhcp-35fc068a-750d-4add-b1d2-af392dbd8790 (id: 1)

Update parsing to deal with old and new formats.

Change-Id: I0d3fc4262284172f5ad31e4f2f78ae1fb33b4228
Closes-Bug: 1497309
---
 neutron/agent/linux/ip_lib.py                 |  6 +++---
 neutron/tests/unit/agent/linux/test_ip_lib.py | 15 +++++++++++++++
 2 files changed, 18 insertions(+), 3 deletions(-)

--- a/neutron/agent/linux/ip_lib.py
+++ b/neutron/agent/linux/ip_lib.py
@@ -208,7 +208,7 @@
     @classmethod
     def get_namespaces(cls):
         output = cls._execute([], 'netns', ('list',))
-        return [l.strip() for l in output.split('\n')]
+        return [l.split()[0] for l in output.splitlines()]
 
 
 class IPDevice(SubProcessBase):
@@ -819,8 +819,8 @@
         output = self._parent._execute(
             ['o'], 'netns', ['list'],
             run_as_root=cfg.CONF.AGENT.use_helper_for_ns_read)
-        for line in output.split('\n'):
-            if name == line.strip():
+        for line in [l.split()[0] for l in output.splitlines()]:
+            if name == line:
                 return True
         return False
 
--- a/neutron/tests/unit/agent/linux/test_ip_lib.py
+++ b/neutron/tests/unit/agent/linux/test_ip_lib.py
@@ -27,6 +27,11 @@
     'bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb',
     'cccccccc-cccc-cccc-cccc-cccccccccccc']
 
+NETNS_SAMPLE_IPROUTE2_4 = [
+    '12345678-1234-5678-abcd-1234567890ab (id: 1)',
+    'bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb (id: 0)',
+    'cccccccc-cccc-cccc-cccc-cccccccccccc (id: 2)']
+
 LINK_SAMPLE = [
     '1: lo: <LOOPBACK,UP,LOWER_UP> mtu 16436 qdisc noqueue state UNKNOWN \\'
     'link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00 promiscuity 0',
@@ -274,6 +279,16 @@
         retval = ip_lib.IPWrapper.get_namespaces()
         self.assertEqual(retval,
                          ['12345678-1234-5678-abcd-1234567890ab',
+                          'bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb',
+                          'cccccccc-cccc-cccc-cccc-cccccccccccc'])
+
+        self.execute.assert_called_once_with([], 'netns', ('list',))
+
+    def test_get_namespaces_iproute2_4(self):
+        self.execute.return_value = '\n'.join(NETNS_SAMPLE_IPROUTE2_4)
+        retval = ip_lib.IPWrapper.get_namespaces()
+        self.assertEqual(retval,
+                         ['12345678-1234-5678-abcd-1234567890ab',
                           'bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb',
                           'cccccccc-cccc-cccc-cccc-cccccccccccc'])
 
